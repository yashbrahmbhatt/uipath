name: Build Changed Projects (Optimized)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-changes:
    runs-on: [self-hosted, windows]
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Action Dependencies
        run: |
          cd .github/actions/build-matrix
          npm install
        shell: bash

      - name: Build Matrix
        id: build-matrix
        uses: ./.github/actions/build-matrix
        with:
          mono-config-path: 'mono.json'

  build:
    name: Build ${{ matrix.id }}
    environment: Dev
    if: ${{ needs.detect-changes.outputs.matrix != '{"include":[]}' }}
    needs: detect-changes
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    runs-on: [self-hosted, windows]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Action Dependencies
        run: |
          for action in compute-version build-artifact create-github-tag publish-github-packages publish-nuget; do
            if [ -d ".github/actions/$action" ]; then
              cd ".github/actions/$action"
              npm install
              cd - > /dev/null
            fi
          done
        shell: bash

      - name: Compute Version
        id: version
        uses: ./.github/actions/compute-version
        with:
          project-id: ${{ matrix.id }}

      - name: Build Artifact
        id: build
        uses: ./.github/actions/build-artifact
        with:
          project-id: ${{ matrix.id }}
          project-path: ${{ matrix.path }}
          project-type: ${{ matrix.type }}
          version: ${{ steps.version.outputs.version }}
          full-version: ${{ steps.version.outputs.full-version }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.version.outputs.full-version }}
          path: ${{ steps.build.outputs.package-path }}

      - name: Create GitHub Tag
        uses: ./.github/actions/create-github-tag
        with:
          full-version: ${{ steps.version.outputs.full-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish to GitHub Packages
        if: contains(matrix.deploySteps, 'nuget')
        uses: ./.github/actions/publish-github-packages
        with:
          package-path: ${{ steps.build.outputs.package-path }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository-owner: ${{ github.repository_owner }}
    
      - name: Publish to NuGet.org
        if: contains(matrix.deploySteps, 'nuget')
        uses: ./.github/actions/publish-nuget
        with:
          package-path: ${{ steps.build.outputs.package-path }}
          nuget-api-key: ${{ secrets.NUGET_ORG_API_KEY }}
