name: "uipath-orchestrator-test-data-queue-items-get"
description: |
  NAME:
     uipath orchestrator test-data-queue-items get - Return a list of test data queue items

  USAGE:
     uipath orchestrator test-data-queue-items get [command options] [arguments...]

  DESCRIPTION:
     OAuth required scopes: OR.TestDataQueues or OR.TestDataQueues.Read.

     Required permissions: TestDataQueueItems.View.

     Responses:
     200 Returns a list of test data queue items filtered with queryOptions
     403 If the caller doesn't have permissions to view test data queue items

  OPTIONS:
     --folder-id integer (required)
        Folder/OrganizationUnit Id

     --count boolean
        Indicates whether the total count of items within a collection are returned in the result.

     --expand string
        Indicates the related entities to be represented inline. The maximum depth is 2.

     --filter string
        Restricts the set of items returned. The maximum number of expressions is 100.

     --orderby string
        Specifies the order in which items are returned. The maximum number of expressions is 5.

     --select string
        Limits the properties returned in the result.

     --skip integer
        Excludes the specified number of items of the queried collection from the result.

     --top integer
        Limits the number of items returned from a collection. The maximum value is 1000.

on:
  workflow_call:
    inputs:
      folder_id:
        description: "Folder/OrganizationUnit Id (required)"
        required: true
        type: number
      count:
        description: "Indicates whether the total count of items within a collection are returned in the result."
        required: false
        type: boolean
        default: false
      expand:
        description: "Indicates the related entities to be represented inline. The maximum depth is 2."
        required: false
        type: string
        default: ''
      filter:
        description: "Restricts the set of items returned. The maximum number of expressions is 100."
        required: false
        type: string
        default: ''
      orderby:
        description: "Specifies the order in which items are returned. The maximum number of expressions is 5."
        required: false
        type: string
        default: ''
      select:
        description: "Limits the properties returned in the result."
        required: false
        type: string
        default: ''
      skip:
        description: "Excludes the specified number of items of the queried collection from the result."
        required: false
        type: number
        default: 0
      top:
        description: "Limits the number of items returned from a collection. The maximum value is 1000."
        required: false
        type: number
        default: 1000

jobs:
  run-test-data-queue-items-get:
    runs-on: [windows, self-hosted]
    steps:
      - name: Run uipath orchestrator test-data-queue-items get
        shell: pwsh
        run: |
          # Initialize an array to build command arguments
          $args = @(
            'orchestrator'
            'test-data-queue-items'
            'get'
            "--folder-id", "${{ inputs.folder_id }}"
          )

          # Append --count if true
          if (${{ inputs.count }}) {
            $args += '--count'
          }
          # Append --expand if specified and not empty
          if (-not [string]::IsNullOrEmpty('${{ inputs.expand }}')) {
            $args += '--expand'
            $args += '${{ inputs.expand }}'
          }
          # Append --filter if specified and not empty
          if (-not [string]::IsNullOrEmpty('${{ inputs.filter }}')) {
            $args += '--filter'
            $args += '${{ inputs.filter }}'
          }
          # Append --orderby if specified and not empty
          if (-not [string]::IsNullOrEmpty('${{ inputs.orderby }}')) {
            $args += '--orderby'
            $args += '${{ inputs.orderby }}'
          }
          # Append --select if specified and not empty
          if (-not [string]::IsNullOrEmpty('${{ inputs.select }}')) {
            $args += '--select'
            $args += '${{ inputs.select }}'
          }
          # Append --skip if greater than 0
          if (${{ inputs.skip }} -gt 0) {
            $args += '--skip'
            $args += "${{ inputs.skip }}"
          }
          # Append --top if less than 1000 (default is 1000)
          if (${{ inputs.top }} -lt 1000) {
            $args += '--top'
            $args += "${{ inputs.top }}"
          }

          # Execute the command with the assembled arguments
          Write-Host "Executing command: uipath $args"
          & uipath @args