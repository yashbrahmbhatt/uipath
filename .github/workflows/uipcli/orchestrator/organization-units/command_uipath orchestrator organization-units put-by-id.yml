name: 'UiPath Orchestrator Organization Units Put By Id'
description: |
  NAME:
     uipath orchestrator organization-units put-by-id - Edits an organization unit.

  USAGE:
     uipath orchestrator organization-units put-by-id [command options] [arguments...]

  DESCRIPTION:
     OAuth required scopes: OR.Folders or OR.Folders.Write.

     Required permissions: Units.Edit.
     DEPRECATED: 
     Kept for backwards compatibility. Use Put from FoldersController  instead
     Please refer to https://docs.uipath.com/orchestrator/reference

  OPTIONS:
     --display-name string (required)
        The name of the organization unit.

     --key integer (required)

     --id integer

on:
  workflow_call:
    inputs:
      display-name:
        description: 'The name of the organization unit.'
        required: true
        type: string
      key:
        description: 'The key of the organization unit.'
        required: true
        type: number
      id:
        description: 'The id of the organization unit.'
        required: false
        type: number

jobs:
  run-command:
    runs-on: [windows, self-hosted]
    outputs:
      result: ${{ steps.run-cli.outputs.result }}
    steps:
      - name: Run uipath orchestrator organization-units put-by-id command
        id: run-cli
        shell: pwsh
        run: |
          # Initialize arguments array with base command and required options
          $args = @("orchestrator", "organization-units", "put-by-id")
          $args += @("--display-name", "'${{ inputs.display-name }}'")
          $args += @("--key", ${{ inputs.key }})

          # Add optional --id if specified
          if (${{ inputs.id }} -ne $null) {
              $args += @("--id", ${{ inputs.id }})
          }

          # Build and invoke the full command
          $cmd = "uipath " + ($args -join ' ')
          Write-Host "Executing: $cmd"
          & uipath @args
          if ($LASTEXITCODE -ne 0) {
            Write-Host "Command failed with exit code $LASTEXITCODE"
            exit $LASTEXITCODE
          } else {
            Write-Host "Command executed successfully."
          }