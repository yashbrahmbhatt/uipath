name: uipath-orchestrator-roles-get
description: |
  OAuth required scopes: OR.Users or OR.Users.Read.
  Required permissions: Roles.View or Units.Edit or SubFolders.Edit.
  Gets roles.

on:
  workflow_call:
    inputs:
      count:
        description: Indicates whether the total count of items within a collection are returned in the result.
        required: false
        type: boolean
        default: false
      expand:
        description: Indicates the related entities to be represented inline. The maximum depth is 2.
        required: false
        type: string
        default: ''
      filter:
        description: Restricts the set of items returned. The maximum number of expressions is 100.
        required: false
        type: string
        default: ''
      orderby:
        description: Specifies the order in which items are returned. The maximum number of expressions is 5.
        required: false
        type: string
        default: ''
      select:
        description: Limits the properties returned in the result.
        required: false
        type: string
        default: ''
      skip:
        description: Excludes the specified number of items of the queried collection from the result.
        required: false
        type: integer
        default: 0
      top:
        description: Limits the number of items returned from a collection. The maximum value is 1000.
        required: false
        type: integer
        default: 0

jobs:
  get-roles:
    runs-on: [windows, self-hosted]
    steps:
      - name: Run uipath orchestrator roles get command
        shell: pwsh
        run: |
          $args = @("orchestrator","roles","get")

          if (${{ inputs.count }}) {
            $args += "--count"
            $args += ${{ inputs.count }}
          }

          if (![string]::IsNullOrEmpty("${{ inputs.expand }}")) {
            $args += "--expand"
            $args += "${{ inputs.expand }}"
          }

          if (![string]::IsNullOrEmpty("${{ inputs.filter }}")) {
            $args += "--filter"
            $args += "${{ inputs.filter }}"
          }

          if (![string]::IsNullOrEmpty("${{ inputs.orderby }}")) {
            $args += "--orderby"
            $args += "${{ inputs.orderby }}"
          }

          if (![string]::IsNullOrEmpty("${{ inputs.select }}")) {
            $args += "--select"
            $args += "${{ inputs.select }}"
          }

          if (${{ inputs.skip }} -gt 0) {
            $args += "--skip"
            $args += ${{ inputs.skip }}
          }

          if (${{ inputs.top }} -gt 0) {
            $args += "--top"
            $args += ${{ inputs.top }}
          }

          # Execute the command
          uipath @args