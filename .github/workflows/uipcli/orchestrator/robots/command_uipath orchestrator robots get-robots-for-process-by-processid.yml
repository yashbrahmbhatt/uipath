name: UiPath Orchestrator Robots Get Robots For Process By ProcessId

description: |
  NAME:
     uipath orchestrator robots get-robots-for-process-by-processid - Returns a collection of all robots that can execute the process with the provided Id.

  USAGE:
     uipath orchestrator robots get-robots-for-process-by-processid [command options] [arguments...]

  DESCRIPTION:
     OAuth required scopes: OR.Robots or OR.Robots.Read.

     Required permissions: Robots.View and Environments.View and Processes.View.

  OPTIONS:
     --folder-id integer (required)
        Folder/OrganizationUnit Id

     --process-id string (required)
        The Id of the process for which the robots are fetched.

     --count boolean
        Indicates whether the total count of items within a collection are returned in the result.

     --expand string
        Indicates the related entities to be represented inline. The maximum depth is 2.

     --filter string
        Restricts the set of items returned. The maximum number of expressions is 100.

     --orderby string
        Specifies the order in which items are returned. The maximum number of expressions is 5.

     --select string
        Limits the properties returned in the result.

     --skip integer
        Excludes the specified number of items of the queried collection from the result.

     --top integer
        Limits the number of items returned from a collection. The maximum value is 1000.

on:
  workflow_call:
    inputs:
      folder-id:
        description: Folder/OrganizationUnit Id
        required: true
        type: number
      process-id:
        description: The Id of the process for which the robots are fetched.
        required: true
        type: string
      count:
        description: Indicates whether the total count of items within a collection are returned in the result.
        required: false
        type: boolean
        default: false
      expand:
        description: Indicates the related entities to be represented inline. The maximum depth is 2.
        required: false
        type: string
        default: ''
      filter:
        description: Restricts the set of items returned. The maximum number of expressions is 100.
        required: false
        type: string
        default: ''
      orderby:
        description: Specifies the order in which items are returned. The maximum number of expressions is 5.
        required: false
        type: string
        default: ''
      select:
        description: Limits the properties returned in the result.
        required: false
        type: string
        default: ''
      skip:
        description: Excludes the specified number of items of the queried collection from the result.
        required: false
        type: number
        default: 0
      top:
        description: Limits the number of items returned from a collection. The maximum value is 1000.
        required: false
        type: number
        default: 0

jobs:
  get-robots-for-process:
    runs-on: [windows, self-hosted]
    steps:
      - name: Run UiPath orchestrator robots get-robots-for-process-by-processid command
        shell: pwsh
        env:
          # Add any necessary environment variables or secrets here if needed
        run: |
          # Initialize the args array for the CLI command arguments
          $args = @("orchestrator", "robots", "get-robots-for-process-by-processid")

          # Required parameters
          $args += "--folder-id"
          $args += "${{ inputs.folder-id }}"

          $args += "--process-id"
          $args += "${{ inputs.process-id }}"

          # Optional parameters

          if (${{ inputs.count }}) {
            $args += "--count"
          }

          if (${{ inputs.expand }} -and ${{ inputs.expand }}.Length -gt 0) {
            $args += "--expand"
            $args += "${{ inputs.expand }}"
          }

          if (${{ inputs.filter }} -and ${{ inputs.filter }}.Length -gt 0) {
            $args += "--filter"
            $args += "${{ inputs.filter }}"
          }

          if (${{ inputs.orderby }} -and ${{ inputs.orderby }}.Length -gt 0) {
            $args += "--orderby"
            $args += "${{ inputs.orderby }}"
          }

          if (${{ inputs.select }} -and ${{ inputs.select }}.Length -gt 0) {
            $args += "--select"
            $args += "${{ inputs.select }}"
          }

          if (${{ inputs.skip }} -gt 0) {
            $args += "--skip"
            $args += "${{ inputs.skip }}"
          }

          if (${{ inputs.top }} -gt 0) {
            $args += "--top"
            $args += "${{ inputs.top }}"
          }

          # Execute the CLI command with the constructed arguments
          uipath @args