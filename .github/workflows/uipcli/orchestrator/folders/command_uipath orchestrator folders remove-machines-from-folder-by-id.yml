name: uipath-orchestrator-folders-remove-machines-from-folder-by-id
description: |
  NAME:
     uipath orchestrator folders remove-machines-from-folder-by-id - Remove user assignment from a folder.

  USAGE:
     uipath orchestrator folders remove-machines-from-folder-by-id [command options] [arguments...]

  DESCRIPTION:
     OAuth required scopes: OR.Folders or OR.Folders.Write.

     Required permissions: (Units.Edit or SubFolders.Edit - Removes machines from any folder or only if caller has SubFolders.Edit permission the folder provided).

  OPTIONS:
     --key integer (required)

     --machine-ids integer,integer,... (required)
on:
  workflow_call:
    inputs:
      key:
        description: 'The folder key (integer) to remove machines from.'
        required: true
        type: string
      machine_ids:
        description: 'Comma-separated list of machine IDs (integers) to remove from the folder.'
        required: true
        type: string
    secrets: {}
jobs:
  remove-machines-from-folder:
    runs-on: [windows, self-hosted]
    steps:
      - name: Run uipath orchestrator folders remove-machines-from-folder-by-id
        shell: pwsh
        run: |
          # Initialize argument array for the CLI command
          $args = @()

          # Add the base command
          $args += 'uipath'
          $args += 'orchestrator'
          $args += 'folders'
          $args += 'remove-machines-from-folder-by-id'

          # Add required --key parameter, ensuring it is properly quoted
          $args += '--key'
          $args += ('"{0}"' -f ${{ inputs.key }})

          # Add required --machine-ids parameter, properly quoted
          $args += '--machine-ids'
          $args += ('"{0}"' -f ${{ inputs.machine_ids }})

          # Join all arguments with spaces and invoke the CLI command
          $cmd = $args -join ' '

          Write-Host "Executing command: $cmd"
          iex $cmd