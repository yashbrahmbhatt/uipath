name: UiPath Orchestrator Set Default Credential Store by Resource Type
description: |
  NAME:
     uipath orchestrator credential-stores set-default-store-for-resource-type-by-id - Sets a credential store as the default for the given credential type.

  USAGE:
     uipath orchestrator credential-stores set-default-store-for-resource-type-by-id [command options] [arguments...]

  DESCRIPTION:
     OAuth required scopes: OR.Settings or OR.Settings.Write.

     Required permissions: Settings.Edit.

  OPTIONS:
     --key integer (required)
        Provides the ID of the credential store to set as default.

     --resource-type string (required)
        This enum describes the type of resources that can be stored in the Credential Store. When
        a new resource type is added, the default needs to be initialized in 3 places:
        1. Existing tenants: At migration time.
        2. Default tenant: At seed time in DefaultTenantCreator.cs.
        3. New tenants: In TenantService.cs.

        Allowed values:
        - AssetCredential
        - RobotCredential
        - BucketCredential
        - Secrets

on:
  workflow_call:
    inputs:
      key:
        required: true
        type: number
        description: The ID of the credential store to set as default.
      resource-type:
        required: true
        type: string
        description: |
          The type of resources stored in the credential store.
          Allowed values: AssetCredential, RobotCredential, BucketCredential, Secrets
        default: AssetCredential

jobs:
  set-default-store:
    runs-on: [windows, self-hosted]
    outputs: {}
    steps:
    - name: Run uipath orchestrator command
      shell: pwsh
      run: |
        # Validate resource-type input
        $validResourceTypes = @('AssetCredential', 'RobotCredential', 'BucketCredential', 'Secrets')
        if (-not $validResourceTypes.Contains('${{ inputs.resource-type }}')) {
          Write-Error "Invalid resource-type '${{ inputs.resource-type }}'. Must be one of: $($validResourceTypes -join ', ')"
          exit 1
        }

        # Build argument array for the command
        $args = @(
          'orchestrator'
          'credential-stores'
          'set-default-store-for-resource-type-by-id'
          '--key', '${{ inputs.key }}'
          '--resource-type', '${{ inputs.resource-type }}'
        )

        # Execute the uipath CLI command
        uipath @args