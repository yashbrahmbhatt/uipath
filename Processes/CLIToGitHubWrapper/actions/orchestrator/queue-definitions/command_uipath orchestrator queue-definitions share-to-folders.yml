name: uipath-orchestrator-queue-definitions-share-to-folders
description: |
  NAME:
     uipath orchestrator queue-definitions share-to-folders - Makes the queue visible in the specified folders.

  USAGE:
     uipath orchestrator queue-definitions share-to-folders [command options] [arguments...]

  DESCRIPTION:
     OAuth required scopes: OR.Queues or OR.Queues.Write.

     Requires authentication.

  OPTIONS:
     --folder-id integer (required)
        Folder/OrganizationUnit Id

     --queue-ids integer,integer,...

     --to-add-folder-ids integer,integer,...

     --to-remove-folder-ids integer,integer,...
  
on:
  workflow_call:
    inputs:
      folder_id:
        description: 'Folder/OrganizationUnit Id (required)'
        required: true
        type: string
      queue_ids:
        description: 'Comma-separated list of queue IDs (optional)'
        required: false
        type: string
        default: ''
      to_add_folder_ids:
        description: 'Comma-separated list of folder IDs to add (optional)'
        required: false
        type: string
        default: ''
      to_remove_folder_ids:
        description: 'Comma-separated list of folder IDs to remove (optional)'
        required: false
        type: string
        default: ''
      # Assume authentication token or similar might be needed; add as a secret
    secrets:
      UIPATH_AUTH_TOKEN:
        description: 'Authentication token for UiPath Orchestrator (required)'

jobs:
  run-queue-definitions-share-to-folders:
    runs-on: [windows, self-hosted]
    steps:
      - name: Run uipath orchestrator queue-definitions share-to-folders command
        shell: pwsh
        env:
          UIPATH_AUTH_TOKEN: ${{ secrets.UIPATH_AUTH_TOKEN }}
        run: |
          # Build the CLI command arguments
          $args = @('orchestrator','queue-definitions','share-to-folders')

          # Required folder ID argument
          $args += "--folder-id"
          $args += "${{ inputs.folder_id }}"

          # Optional queue IDs argument
          if ([string]::IsNullOrEmpty("${{ inputs.queue_ids }}") -eq $false) {
            $args += "--queue-ids"
            $args += "${{ inputs.queue_ids }}"
          }

          # Optional to-add-folder-ids argument
          if ([string]::IsNullOrEmpty("${{ inputs.to_add_folder_ids }}") -eq $false) {
            $args += "--to-add-folder-ids"
            $args += "${{ inputs.to_add_folder_ids }}"
          }

          # Optional to-remove-folder-ids argument
          if ([string]::IsNullOrEmpty("${{ inputs.to_remove_folder_ids }}") -eq $false) {
            $args += "--to-remove-folder-ids"
            $args += "${{ inputs.to_remove_folder_ids }}"
          }

          # Here you may want to add authentication headers or env vars depending on CLI needs
          # The following assumes the CLI uses the UIPATH_AUTH_TOKEN environment variable automatically or via config

          # Run the CLI command
          & uipath $args

          # Exit with the CLI's exit code to propagate failure if it occurs
          exit $LASTEXITCODE