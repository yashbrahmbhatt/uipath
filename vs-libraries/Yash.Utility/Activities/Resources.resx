<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  
  <!-- ReadExcelFile Activity -->
  <data name="ReadExcelFile_DisplayName" xml:space="preserve">
    <value>Read Excel File</value>
  </data>
  <data name="ReadExcelFile_Description" xml:space="preserve">
    <value>Reads an Excel file and converts its sheets into a DataSet. Uses EPPlus which can read files even when they are open in Excel.</value>
  </data>
  <data name="ReadExcelFile_FilePath_DisplayName" xml:space="preserve">
    <value>Excel File Path</value>
  </data>
  <data name="ReadExcelFile_FilePath_Tooltip" xml:space="preserve">
    <value>Path to the Excel workbook file (.xls or .xlsx)</value>
  </data>
  <data name="ReadExcelFile_EnableLogging_DisplayName" xml:space="preserve">
    <value>Enable Logging</value>
  </data>
  <data name="ReadExcelFile_EnableLogging_Tooltip" xml:space="preserve">
    <value>Enable detailed logging of the read operation</value>
  </data>
  <data name="ReadExcelFile_Result_DisplayName" xml:space="preserve">
    <value>DataSet Result</value>
  </data>
  <data name="ReadExcelFile_Result_Tooltip" xml:space="preserve">
    <value>DataSet containing all sheets as DataTables</value>
  </data>

  <!-- CreateExcelFile Activity -->
  <data name="CreateExcelFile_DisplayName" xml:space="preserve">
    <value>Create Excel File</value>
  </data>
  <data name="CreateExcelFile_Description" xml:space="preserve">
    <value>Creates an Excel file from a DataSet or DataTable. Each DataTable becomes a separate worksheet in the Excel file.</value>
  </data>
  <data name="CreateExcelFile_OutputPath_DisplayName" xml:space="preserve">
    <value>Output File Path</value>
  </data>
  <data name="CreateExcelFile_OutputPath_Tooltip" xml:space="preserve">
    <value>Path where the Excel file will be saved (.xlsx)</value>
  </data>
  <data name="CreateExcelFile_DataSet_DisplayName" xml:space="preserve">
    <value>Data Set</value>
  </data>
  <data name="CreateExcelFile_DataSet_Tooltip" xml:space="preserve">
    <value>DataSet containing DataTables to export as sheets (use this OR Data Table)</value>
  </data>
  <data name="CreateExcelFile_DataTable_DisplayName" xml:space="preserve">
    <value>Data Table</value>
  </data>
  <data name="CreateExcelFile_DataTable_Tooltip" xml:space="preserve">
    <value>Single DataTable to export (use this OR Data Set)</value>
  </data>
  <data name="CreateExcelFile_SheetName_DisplayName" xml:space="preserve">
    <value>Sheet Name</value>
  </data>
  <data name="CreateExcelFile_SheetName_Tooltip" xml:space="preserve">
    <value>Optional sheet name when using Data Table input</value>
  </data>
  <data name="CreateExcelFile_EnableLogging_DisplayName" xml:space="preserve">
    <value>Enable Logging</value>
  </data>
  <data name="CreateExcelFile_EnableLogging_Tooltip" xml:space="preserve">
    <value>Enable detailed logging of the creation operation</value>
  </data>
  <data name="CreateExcelFile_OverwriteExisting_DisplayName" xml:space="preserve">
    <value>Overwrite Existing</value>
  </data>
  <data name="CreateExcelFile_OverwriteExisting_Tooltip" xml:space="preserve">
    <value>Overwrite existing file if it exists</value>
  </data>
</root>
