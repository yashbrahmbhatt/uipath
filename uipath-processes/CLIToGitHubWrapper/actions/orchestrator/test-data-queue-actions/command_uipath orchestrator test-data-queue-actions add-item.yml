name: uipath-orchestrator-test-data-queue-actions-add-item
description: |
  NAME:
     uipath orchestrator test-data-queue-actions add-item - Add a new test data queue item

  USAGE:
     uipath orchestrator test-data-queue-actions add-item [command options] [arguments...]

  DESCRIPTION:
     OAuth required scopes: OR.TestDataQueues or OR.TestDataQueues.Write.

     Required permissions: TestDataQueueItems.Create.

     Responses:
     201 Returns the added test data queue item
     403 If the caller doesn't have permissions to create test data queue items
     409 If the test data queue item content violates the content JSON schema set on the queue

on:
  workflow_call:
    inputs:
      folder_id:
        description: 'Folder/OrganizationUnit Id'
        required: true
        type: number
      queue_name:
        description: 'Queue name'
        required: true
        type: string
      content:
        description: 'Content JSON object string (optional)'
        required: false
        type: string

jobs:
  add-item:
    runs-on: [windows, self-hosted]
    outputs: {}
    steps:
      - name: Run uipath orchestrator test-data-queue-actions add-item
        shell: pwsh
        run: |
          $args = @("orchestrator","test-data-queue-actions","add-item")
          # Add required folder-id parameter
          $args += "--folder-id"
          $args += "${{ inputs.folder_id }}"
          # Add required queue-name parameter (quoted)
          $args += "--queue-name"
          $args += "'${{ inputs.queue_name }}'"
          # Add optional content parameter if provided
          if ("${{ inputs.content }}" -ne "") {
            $args += "--content"
            $args += "'${{ inputs.content }}'"
          }
          # Combine all arguments into a single command string
          $command = "uipath " + ($args -join " ")
          Write-Host "Executing command: $command"
          Invoke-Expression $command