<Activity mc:Ignorable="sap sap2010" x:Class="TakeScreenshot" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sdi="clr-namespace:System.Drawing.Imaging;assembly=System.Drawing.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="The path to the folder to save screenshots to." Name="in_FolderPath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="If specified, overrides the folder path and uses this path for the file name. Otherwise, it just outputs the full path to the screenshot." Name="io_FilePath" Type="InOutArgument(x:String)" />
  </x:Members>
  <this:TakeScreenshot.in_FolderPath>
    <InArgument x:TypeArguments="x:String">
      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">@"C:\Users\eyash\Documents\UiPath\LazyFramework\Data\Temp"</CSharpValue>
    </InArgument>
  </this:TakeScreenshot.in_FolderPath>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1632,2154</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Drawing.Imaging</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Primitives</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Takes a screenshot and saves it to a folder." DisplayName="TakeScreenshot" sap:VirtualizedContainerService.HintSize="519,2089" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="FolderExists" />
      <Variable x:TypeArguments="sd:Rectangle" Name="ScreenBounds" />
      <Variable x:TypeArguments="sd1:Bitmap" Name="Screenshot" />
      <Variable x:TypeArguments="sd1:Graphics" Name="Graphic" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If DisplayName="Empty File Path?" sap:VirtualizedContainerService.HintSize="457,384" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">string.IsNullOrEmpty(io_FilePath)</CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:MultipleAssign DisplayName="Set File Name" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">io_FilePath</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">Path.Combine(in_FolderPath, string.Format("{0}_{1}_{2}_{3}.png", new string[]{Environment.MachineName, Environment.UserDomainName, Environment.UserName, DateTime.Now.ToString("yyyyMMdd HHmmss") }))</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </If.Then>
      <If.Else>
        <ui:MultipleAssign DisplayName="Set Folder Path" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">in_FolderPath</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">new FileInfo(io_FilePath).Directory.FullName</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </If.Else>
    </If>
    <ui:FolderExistsX DisplayName="Get Folder Exists" sap:VirtualizedContainerService.HintSize="457,133" sap2010:WorkflowViewState.IdRef="FolderExistsX_1">
      <ui:FolderExistsX.Exists>
        <OutArgument x:TypeArguments="x:Boolean">
          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">FolderExists</CSharpReference>
        </OutArgument>
      </ui:FolderExistsX.Exists>
      <ui:FolderExistsX.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">in_FolderPath</CSharpValue>
        </InArgument>
      </ui:FolderExistsX.Path>
    </ui:FolderExistsX>
    <If DisplayName="Folder Doesn't Exist?" sap:VirtualizedContainerService.HintSize="457,262" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">!FolderExists</CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder!" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_1">
          <ui:CreateDirectory.Path>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">in_FolderPath</CSharpValue>
            </InArgument>
          </ui:CreateDirectory.Path>
        </ui:CreateDirectory>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_4" />
      </If.Else>
    </If>
    <ui:MultipleAssign DisplayName="Get Primary Screenshot" sap:VirtualizedContainerService.HintSize="457,163" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:Rectangle">
                <CSharpReference x:TypeArguments="sd:Rectangle" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">ScreenBounds</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:Rectangle">
                <CSharpValue x:TypeArguments="sd:Rectangle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">Screen.PrimaryScreen.Bounds</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd1:Bitmap">
                <CSharpReference x:TypeArguments="sd1:Bitmap" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">Screenshot</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd1:Bitmap">
                <CSharpValue x:TypeArguments="sd1:Bitmap" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">new Bitmap(ScreenBounds.Width, ScreenBounds.Height, PixelFormat.Format32bppArgb)</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd1:Graphics">
                <CSharpReference x:TypeArguments="sd1:Graphics" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">Graphic</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd1:Graphics">
                <CSharpValue x:TypeArguments="sd1:Graphics" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">Graphics.FromImage(Screenshot)</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <InvokeMethod DisplayName="Copy Screen to Graphic" sap:VirtualizedContainerService.HintSize="457,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="CopyFromScreen">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sd1:Graphics">
          <CSharpValue x:TypeArguments="sd1:Graphics" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">Graphic</CSharpValue>
        </InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="x:Int32">
        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">ScreenBounds.X</CSharpValue>
      </InArgument>
      <InArgument x:TypeArguments="x:Int32">
        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">ScreenBounds.Y</CSharpValue>
      </InArgument>
      <InArgument x:TypeArguments="x:Int32">0</InArgument>
      <InArgument x:TypeArguments="x:Int32">0</InArgument>
      <InArgument x:TypeArguments="sd:Size">
        <CSharpValue x:TypeArguments="sd:Size" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">ScreenBounds.Size</CSharpValue>
      </InArgument>
      <InArgument x:TypeArguments="sd1:CopyPixelOperation">
        <CSharpValue x:TypeArguments="sd1:CopyPixelOperation" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">CopyPixelOperation.SourceCopy</CSharpValue>
      </InArgument>
    </InvokeMethod>
    <InvokeMethod DisplayName="Dispose Graphic" sap:VirtualizedContainerService.HintSize="457,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Dispose">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sd1:Graphics">
          <CSharpValue x:TypeArguments="sd1:Graphics" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">Graphic</CSharpValue>
        </InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
    <InvokeMethod DisplayName="Save Screenshot" sap:VirtualizedContainerService.HintSize="457,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Save">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sd1:Bitmap">
          <CSharpValue x:TypeArguments="sd1:Bitmap" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">Screenshot</CSharpValue>
        </InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="x:String">
        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">io_FilePath</CSharpValue>
      </InArgument>
      <InArgument x:TypeArguments="sdi:ImageFormat">
        <CSharpValue x:TypeArguments="sdi:ImageFormat" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">ImageFormat.Png</CSharpValue>
      </InArgument>
    </InvokeMethod>
    <InvokeMethod DisplayName="Dispose Screenshot" sap:VirtualizedContainerService.HintSize="457,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Dispose">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sd1:Bitmap">
          <CSharpValue x:TypeArguments="sd1:Bitmap" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">Screenshot</CSharpValue>
        </InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
    <ui:LogMessage DisplayName="LM: Complete" sap:VirtualizedContainerService.HintSize="457,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">string.Format("Screenshot saved at {0}", io_FilePath)</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>