<Activity mc:Ignorable="sap sap2010" x:Class="UpdateConfigForm" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ufa="clr-namespace:UiPath.Form.Activities;assembly=UiPath.Form.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ConfigPath" Type="InArgument(x:String)" />
    <x:Property Name="in_TemplateRoot" Type="InArgument(x:String)" />
    <x:Property Name="in_ModuleRoot" Type="InArgument(x:String)" />
    <x:Property Name="in_ModuleName" Type="InArgument(x:String)" />
  </x:Members>
  <this:UpdateConfigForm.in_ConfigPath>
    <InArgument x:TypeArguments="x:String">
      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_473">new DateTime().ToString()</CSharpValue>
    </InArgument>
  </this:UpdateConfigForm.in_ConfigPath>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>986,5433</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.ReaderWriter</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="728,5368" sap2010:WorkflowViewState.IdRef="Sequence_76">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ConfigOutput">
        <Variable.Default>
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_472">new DateTime().ToString()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataSet" Name="ConfigDataSet" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Config" />
      <Variable x:TypeArguments="sd:DataSet" Name="FormattedDataSet" />
      <Variable x:TypeArguments="njl:JObject" Name="JObj" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Assets" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ExcelFiles" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_TextFiles" />
      <Variable x:TypeArguments="sd:DataRow" Name="MatchingRow" />
      <Variable x:TypeArguments="x:String" Name="ConfigName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="LM: Start" sap:VirtualizedContainerService.HintSize="666,141" sap2010:WorkflowViewState.IdRef="LogMessage_1">
      <ui:LogMessage.Level>
        <InArgument x:TypeArguments="ui:LogLevel">
          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_462">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
        </InArgument>
      </ui:LogMessage.Level>
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_463">string.Format("Starting reading file '{0}'",in_ConfigPath)</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Shared\\ReadExcelFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="666,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Shared\\ReadExcelFile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_455">in_ConfigPath</CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="sd:DataSet" x:Key="out_DataSet">
          <CSharpReference x:TypeArguments="sd:DataSet" sap2010:WorkflowViewState.IdRef="CSharpReference`1_174">ConfigDataSet</CSharpReference>
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="LM: File Read" sap:VirtualizedContainerService.HintSize="666,141" sap2010:WorkflowViewState.IdRef="LogMessage_2">
      <ui:LogMessage.Level>
        <InArgument x:TypeArguments="ui:LogLevel">
          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_464">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
        </InArgument>
      </ui:LogMessage.Level>
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_465">string.Format("Config read with sheets '{0}'", ConfigDataSet.Tables.AsText())</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:BuildDataTable DisplayName="Initialize Config Table" sap:VirtualizedContainerService.HintSize="666,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Description&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_175">dt_Config</CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
    </ui:BuildDataTable>
    <ui:MultipleAssign DisplayName="FormattedDataSet" sap:VirtualizedContainerService.HintSize="666,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_51">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_97">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataSet">
                <CSharpReference x:TypeArguments="sd:DataSet" sap2010:WorkflowViewState.IdRef="CSharpReference`1_205">FormattedDataSet</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataSet">
                <CSharpValue x:TypeArguments="sd:DataSet" sap2010:WorkflowViewState.IdRef="CSharpValue`1_408">new DataSet()</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_98">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_206">ConfigName</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_409">in_ModuleName + "Config"</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:ForEach x:TypeArguments="sd:DataTable" CurrentIndex="{x:Null}" DisplayName="Create FormattedDataSet" sap:VirtualizedContainerService.HintSize="666,1867" sap2010:WorkflowViewState.IdRef="ForEach`1_25">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd:DataTable">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataTable" Name="CurrentTable" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Parse Current Config Table" sap:VirtualizedContainerService.HintSize="533,1681" sap2010:WorkflowViewState.IdRef="Sequence_70">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dt_NewTable" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Copy Current Table" sap:VirtualizedContainerService.HintSize="491,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_52">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_99">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="sd:DataTable">
                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_178">dt_NewTable</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="sd:DataTable">
                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_411">CurrentTable.Copy()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_100">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_179">dt_NewTable.TableName</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_412">CurrentTable.TableName</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:FilterDataTable DisplayName="Remove Empty Rows" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="491,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" SelectColumnsMode="Remove">
              <ui:FilterDataTable.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_414">dt_NewTable</CSharpValue>
                </InArgument>
              </ui:FilterDataTable.DataTable>
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_413">"Name"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Column>
                  </ui:FilterOperationArgument>
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.OutputDataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_180">dt_NewTable</CSharpReference>
                </OutArgument>
              </ui:FilterDataTable.OutputDataTable>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <x:Null />
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="Update Paths" sap:VirtualizedContainerService.HintSize="491,402" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="NewTableRow" />
                  </ActivityAction.Argument>
                  <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="Column" sap:VirtualizedContainerService.HintSize="457,287" sap2010:WorkflowViewState.IdRef="ForEach`1_23">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="sd:DataColumn">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="currentItem" />
                        </ActivityAction.Argument>
                        <ui:MultipleAssign DisplayName="Update Path" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_53">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_101">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:Object">
                                    <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_181">NewTableRow[currentItem]</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_417" xml:space="preserve">NewTableRow[currentItem].ToString()
.Replace(in_TemplateRoot, in_ModuleRoot)</CSharpValue>
                                  </InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <ui:ForEach.Values>
                      <InArgument x:TypeArguments="sc:IEnumerable">
                        <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_416">dt_NewTable.Columns</CSharpValue>
                      </InArgument>
                    </ui:ForEach.Values>
                  </ui:ForEach>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_415">dt_NewTable</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
            </ui:ForEachRow>
            <If DisplayName="Not Excel or Text Files" sap:VirtualizedContainerService.HintSize="491,602" sap2010:WorkflowViewState.IdRef="If_15">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_418">CurrentTable.TableName != "TextFiles" &amp;&amp; ((DataTable)CurrentTable).TableName != "ExcelFiles" &amp;&amp; ((DataTable)CurrentTable).TableName != "Assets"</CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:MergeDataTable DisplayName="Merge Current Table to Config" sap:VirtualizedContainerService.HintSize="334,133" sap2010:WorkflowViewState.IdRef="MergeDataTable_4" MissingSchemaAction="Add">
                  <ui:MergeDataTable.Destination>
                    <InOutArgument x:TypeArguments="sd:DataTable">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_217">dt_Config</CSharpReference>
                    </InOutArgument>
                  </ui:MergeDataTable.Destination>
                  <ui:MergeDataTable.Source>
                    <InArgument x:TypeArguments="sd:DataTable">
                      <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_459">dt_NewTable</CSharpValue>
                    </InArgument>
                  </ui:MergeDataTable.Source>
                </ui:MergeDataTable>
              </If.Then>
              <If.Else>
                <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="Update Columns (Special)" sap:VirtualizedContainerService.HintSize="457,287" sap2010:WorkflowViewState.IdRef="ForEach`1_27">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="sd:DataColumn">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="DataColumn" />
                      </ActivityAction.Argument>
                      <ui:MultipleAssign DisplayName="Update Column (Special)" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_63">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_123">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_218">DataColumn.ColumnName</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_461">dt_NewTable.TableName + DataColumn.ColumnName</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <ui:ForEach.Values>
                    <InArgument x:TypeArguments="sc:IEnumerable">
                      <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_460">dt_NewTable.Columns</CSharpValue>
                    </InArgument>
                  </ui:ForEach.Values>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </If.Else>
            </If>
            <InvokeMethod DisplayName="Add Table to DataSet" sap:VirtualizedContainerService.HintSize="491,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sd:DataTableCollection">
                  <CSharpValue x:TypeArguments="sd:DataTableCollection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_422">FormattedDataSet.Tables</CSharpValue>
                </InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:DataTable">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_423">dt_NewTable</CSharpValue>
              </InArgument>
            </InvokeMethod>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_410">ConfigDataSet.Tables</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="Update Columns" sap:VirtualizedContainerService.HintSize="666,52" sap2010:WorkflowViewState.IdRef="ForEach`1_26">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd:DataColumn">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="Column" />
          </ActivityAction.Argument>
          <ui:MultipleAssign DisplayName="Update Column" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_55">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_103">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_184">Column.ColumnName</CSharpReference>
                    </OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_425">"Config" + Column.ColumnName</CSharpValue>
                    </InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_424">dt_Config.Columns</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="LM: Showing Form" sap:VirtualizedContainerService.HintSize="666,141" sap2010:WorkflowViewState.IdRef="LogMessage_3">
      <ui:LogMessage.Level>
        <InArgument x:TypeArguments="ui:LogLevel">
          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_466">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
        </InArgument>
      </ui:LogMessage.Level>
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_467">"Showing form"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ufa:FormActivity CreateFormActivityFileName="{x:Null}" CreateFormActivityFilePath="{x:Null}" Dismissed="{x:Null}" FormFieldsInputData="{x:Null}" FormHeight="{x:Null}" FormTitle="{x:Null}" FormWidth="{x:Null}" IconPath="{x:Null}" LocalCSSFilePath="{x:Null}" SelectedButton="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" CreateFormId="7113832b-5ec0-48a7-bc70-ce1376e42569" DevTools="False" DisableMaximizeButton="False" DisableMinimizeButton="False" DisableSanitize="False" DisplayName="Create Config Form" EnableAccessibility="False" FormSchema="%[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;Please provide a unique name for this config file.&quot;,&quot;tooltip&quot;:&quot;Please provide a unique name for this config file.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;Name&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Config&quot;,&quot;description&quot;:&quot;The config values to set.&quot;,&quot;tooltip&quot;:&quot;The config values to set.&quot;,&quot;disableAddingRemovingRows&quot;:true,&quot;reorder&quot;:false,&quot;addAnotherPosition&quot;:&quot;bottom&quot;,&quot;layoutFixed&quot;:false,&quot;enableRowGroups&quot;:false,&quot;initEmpty&quot;:false,&quot;redrawOn&quot;:&quot;data&quot;,&quot;key&quot;:&quot;Config&quot;,&quot;type&quot;:&quot;datagrid&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the setting.&quot;,&quot;tooltip&quot;:&quot;The name of the setting.&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ConfigName&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;ConfigDescription&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Value&quot;,&quot;description&quot;:&quot;The value of the setting.&quot;,&quot;tooltip&quot;:&quot;The value of the setting.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ConfigValue&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true}]},{&quot;label&quot;:&quot;Assets&quot;,&quot;description&quot;:&quot;The assets to set.&quot;,&quot;tooltip&quot;:&quot;The assets to set.&quot;,&quot;disableAddingRemovingRows&quot;:true,&quot;reorder&quot;:false,&quot;addAnotherPosition&quot;:&quot;bottom&quot;,&quot;layoutFixed&quot;:false,&quot;enableRowGroups&quot;:false,&quot;initEmpty&quot;:false,&quot;redrawOn&quot;:&quot;data&quot;,&quot;key&quot;:&quot;Assets&quot;,&quot;type&quot;:&quot;datagrid&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the asset.&quot;,&quot;tooltip&quot;:&quot;The name of the asset.&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;AssetsName&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;AssetsDescription&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Value&quot;,&quot;description&quot;:&quot;The name of the asset.&quot;,&quot;tooltip&quot;:&quot;The name of the asset.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;AssetsValue&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Folder&quot;,&quot;description&quot;:&quot;The folder that houses the asset.&quot;,&quot;tooltip&quot;:&quot;The folder that houses the asset.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;AssetsFolder&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true}]},{&quot;label&quot;:&quot;Text Files&quot;,&quot;description&quot;:&quot;The text file resources to use.&quot;,&quot;tooltip&quot;:&quot;The text file resources to use.&quot;,&quot;disableAddingRemovingRows&quot;:true,&quot;reorder&quot;:false,&quot;addAnotherPosition&quot;:&quot;bottom&quot;,&quot;layoutFixed&quot;:false,&quot;enableRowGroups&quot;:false,&quot;initEmpty&quot;:false,&quot;redrawOn&quot;:&quot;data&quot;,&quot;key&quot;:&quot;TextFiles&quot;,&quot;type&quot;:&quot;datagrid&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the text file resource.&quot;,&quot;tooltip&quot;:&quot;The name of the text file resource.&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;TextFilesName&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;TextFilesDescription&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Path&quot;,&quot;description&quot;:&quot;The path to the resource. Used for both local and storage bucket sources.&quot;,&quot;tooltip&quot;:&quot;The path to the resource. Used for both local and storage bucket sources.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;TextFilesPath&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Bucket&quot;,&quot;description&quot;:&quot;The storage bucket that contains the text resource. Only set if using a storage bucket resource.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;TextFilesBucket&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Folder&quot;,&quot;description&quot;:&quot;The folder that houses the storage bucket.&quot;,&quot;tooltip&quot;:&quot;The folder that houses the storage bucket.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;TextFilesFolder&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true}]},{&quot;label&quot;:&quot;Excel Files&quot;,&quot;description&quot;:&quot;The excel files to use.&quot;,&quot;tooltip&quot;:&quot;The excel files to use.&quot;,&quot;disableAddingRemovingRows&quot;:true,&quot;reorder&quot;:false,&quot;addAnotherPosition&quot;:&quot;bottom&quot;,&quot;layoutFixed&quot;:false,&quot;enableRowGroups&quot;:false,&quot;initEmpty&quot;:false,&quot;redrawOn&quot;:&quot;data&quot;,&quot;key&quot;:&quot;ExcelFiles&quot;,&quot;type&quot;:&quot;datagrid&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the asset.&quot;,&quot;tooltip&quot;:&quot;The name of the asset.&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ExcelFilesName&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;ExcelFilesDescription&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Path&quot;,&quot;description&quot;:&quot;The path to the resource. Used for both local and storage bucket sources.&quot;,&quot;tooltip&quot;:&quot;The path to the resource. Used for both local and storage bucket sources.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ExcelFilesPath&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Bucket&quot;,&quot;description&quot;:&quot;The storage bucket that contains the text resource. Only set if using a storage bucket resource.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ExcelFilesBucket&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Folder&quot;,&quot;description&quot;:&quot;The folder that houses the storage bucket.&quot;,&quot;tooltip&quot;:&quot;The folder that houses the storage bucket.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ExcelFilesFolder&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true}]},{&quot;type&quot;:&quot;button&quot;,&quot;label&quot;:&quot;Submit&quot;,&quot;key&quot;:&quot;submit&quot;,&quot;disableOnInvalid&quot;:true,&quot;input&quot;:true,&quot;tableView&quot;:false}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;100120&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;BaseCss&quot;:&quot;./assets/css/themes/uipath.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;./assets/themeicons/uipath.png&quot;,&quot;OverrideCssUrl&quot;:&quot;./assets/css/themes/uipath.custom.css&quot;,&quot;UserStyleOverrides&quot;:&quot;&quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:false,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" GenerateInputFields="False" sap:VirtualizedContainerService.HintSize="666,142" sap2010:WorkflowViewState.IdRef="FormActivity_3" IsReadOnly="False" MaxColumnsForSchemaGeneration="6" RunDoBlockFirst="False" RunInIsolatedMode="True" StartAsMinimized="False">
      <ufa:FormActivity.Body>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
      </ufa:FormActivity.Body>
      <ufa:FormActivity.DelayBody>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Delay Duration="00:00:00.2500000" sap2010:WorkflowViewState.IdRef="Delay_2" />
        </ActivityAction>
      </ufa:FormActivity.DelayBody>
      <ufa:FormActivity.FormFieldsCollection>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="Config">
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_426">dt_Config</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="Assets">
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_427">FormattedDataSet.Tables["Assets"]</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="TextFiles">
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_428">FormattedDataSet.Tables["TextFiles"]</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="ExcelFiles">
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_429">FormattedDataSet.Tables["ExcelFiles"]</CSharpValue>
        </InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="Name">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_185">ConfigName</CSharpReference>
        </InOutArgument>
      </ufa:FormActivity.FormFieldsCollection>
      <ufa:FormActivity.FormFieldsOutputData>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_186">ConfigOutput</CSharpReference>
        </OutArgument>
      </ufa:FormActivity.FormFieldsOutputData>
    </ufa:FormActivity>
    <ui:LogMessage DisplayName="LM: Form Shown" sap:VirtualizedContainerService.HintSize="666,141" sap2010:WorkflowViewState.IdRef="LogMessage_4">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_468">"Form completed"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:MultipleAssign DisplayName="Get Results" sap:VirtualizedContainerService.HintSize="666,225" sap2010:WorkflowViewState.IdRef="MultipleAssign_56">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_104">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="njl:JObject">
                <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_207">JObj</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="njl:JObject">
                <CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_430">JObject.Parse(ConfigOutput)</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_105">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataTable">
                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_208">dt_Config</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataTable">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_431">JsonConvert.DeserializeObject&lt;DataTable&gt;(JsonConvert.SerializeObject(JObj["Config"]))</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_106">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataTable">
                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_209">dt_Assets</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataTable">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_432">JsonConvert.DeserializeObject&lt;DataTable&gt;(JsonConvert.SerializeObject(JObj["Assets"]))</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_107">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataTable">
                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_210">dt_TextFiles</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataTable">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_433">JsonConvert.DeserializeObject&lt;DataTable&gt;(JsonConvert.SerializeObject(JObj["TextFiles"]))</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_108">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataTable">
                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_211">dt_ExcelFiles</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataTable">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_434">JsonConvert.DeserializeObject&lt;DataTable&gt;(JsonConvert.SerializeObject(JObj["ExcelFiles"]))</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ueab:ExcelProcessScopeX LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Excel" ExistingProcessAction="None" FileConflictResolution="None" sap:VirtualizedContainerService.HintSize="666,1298" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3" LaunchMethod="Automation" MacroSettings="EnableAll" ProcessMode="ReuseIfExists" ShowExcelWindow="False">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Config File" sap:VirtualizedContainerService.HintSize="632,1211" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None">
            <ueab:ExcelApplicationCard.Body>
              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                </ActivityAction.Argument>
                <ueab:ForEachSheetX DisplayName="For Each Config Sheet" sap:VirtualizedContainerService.HintSize="598,942" sap2010:WorkflowViewState.IdRef="ForEachSheetX_4">
                  <ueab:ForEachSheetX.Body>
                    <ActivityAction x:TypeArguments="ue:WorksheetQuickHandle, x:Int32">
                      <ActivityAction.Argument1>
                        <DelegateInArgument x:TypeArguments="ue:WorksheetQuickHandle" Name="ConfigSheet" />
                      </ActivityAction.Argument1>
                      <ActivityAction.Argument2>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                      </ActivityAction.Argument2>
                      <ueab:ExcelForEachRowX DisplayName="For Each Config Row" EmptyRowBehavior="StopAfterThreeConsecutiveEmptyRows" HasHeaders="True" sap:VirtualizedContainerService.HintSize="564,786" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_3" SaveAfterEachRow="False">
                        <ueab:ExcelForEachRowX.Body>
                          <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                            <ActivityAction.Argument1>
                              <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="ConfigRow" />
                            </ActivityAction.Argument1>
                            <ActivityAction.Argument2>
                              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                            </ActivityAction.Argument2>
                            <If DisplayName="Not Empty?" sap:VirtualizedContainerService.HintSize="530,604" sap2010:WorkflowViewState.IdRef="If_16">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_435">!string.IsNullOrEmpty(ConfigRow["Name"])</CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Switch x:TypeArguments="x:String" DisplayName="Sheet Name?" sap:VirtualizedContainerService.HintSize="496,422" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                                  <Switch.Default>
                                    <ui:MultipleAssign DisplayName="Update Row (Config)" sap:VirtualizedContainerService.HintSize="423,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_62">
                                      <ui:MultipleAssign.AssignOperations>
                                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_109">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="sd:DataRow">
                                                <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_212">MatchingRow</CSharpReference>
                                              </OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="sd:DataRow">
                                                <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_436">dt_Config.AsEnumerable().First(r =&gt; r["ConfigName"].ToString() == ConfigRow["Name"].ToString())</CSharpValue>
                                              </InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_122">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="ue:ExcelValue">
                                                <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_213">ConfigRow["Value"]</CSharpReference>
                                              </OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="ue:ExcelValue">
                                                <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_456">MatchingRow["ConfigValue"].ToString()</CSharpValue>
                                              </InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                        </scg:List>
                                      </ui:MultipleAssign.AssignOperations>
                                    </ui:MultipleAssign>
                                  </Switch.Default>
                                  <Switch.Expression>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_438">ConfigSheet.Name</CSharpValue>
                                    </InArgument>
                                  </Switch.Expression>
                                  <ui:MultipleAssign x:Key="Assets" DisplayName="Update Row (Assets)" sap:VirtualizedContainerService.HintSize="423,163" sap2010:WorkflowViewState.IdRef="MultipleAssign_59">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_111">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="sd:DataRow">
                                              <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_214">MatchingRow</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="sd:DataRow">
                                              <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_439">dt_Assets.AsEnumerable().First(r =&gt; r["AssetsName"].ToString() == ConfigRow["Name"].ToString())</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_112">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_195">ConfigRow["Value"]</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_440">MatchingRow["AssetsValue"].ToString()</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_113">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_196">ConfigRow["Folder"]</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_441">MatchingRow["AssetsFolder"].ToString()</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                  <ui:MultipleAssign x:Key="TextFiles" DisplayName="Update Row (TextFiles)" sap:VirtualizedContainerService.HintSize="423,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_60">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_114">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="sd:DataRow">
                                              <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_215">MatchingRow</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="sd:DataRow">
                                              <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_442">dt_TextFiles.AsEnumerable().First(r =&gt; r["TextFilesName"].ToString() == ConfigRow["Name"].ToString())</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_115">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_198">ConfigRow["Path"]</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_443">MatchingRow["TextFilesPath"].ToString()</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_116">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_199">ConfigRow["Folder"]</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_444">MatchingRow["TextFilesFolder"].ToString()</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_117">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_200">ConfigRow["Bucket"]</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_445">MatchingRow["TextFilesBucket"].ToString()</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                  <ui:MultipleAssign x:Key="ExcelFiles" DisplayName="Update Row (ExcelFiles)" sap:VirtualizedContainerService.HintSize="423,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_61">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_118">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="sd:DataRow">
                                              <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_216">MatchingRow</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="sd:DataRow">
                                              <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_446">dt_ExcelFiles.AsEnumerable().First(r =&gt; r["ExcelFilesName"].ToString() == ConfigRow["Name"].ToString())</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_119">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_202">ConfigRow["Path"]</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_447">MatchingRow["ExcelFilesPath"].ToString()</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_120">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_203">ConfigRow["Folder"]</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_448">MatchingRow["ExcelFilesFolder"].ToString()</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_121">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_204">ConfigRow["Bucket"]</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_449">MatchingRow["ExcelFilesBucket"].ToString()</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                </Switch>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_75" />
                              </If.Else>
                            </If>
                          </ActivityAction>
                        </ueab:ExcelForEachRowX.Body>
                        <ueab:ExcelForEachRowX.Range>
                          <InArgument x:TypeArguments="ue:IReadRangeRef">
                            <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_450">ConfigSheet</CSharpValue>
                          </InArgument>
                        </ueab:ExcelForEachRowX.Range>
                      </ueab:ExcelForEachRowX>
                    </ActivityAction>
                  </ueab:ForEachSheetX.Body>
                  <ueab:ForEachSheetX.Workbook>
                    <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                      <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_451">Excel</CSharpValue>
                    </InArgument>
                  </ueab:ForEachSheetX.Workbook>
                </ueab:ForEachSheetX>
              </ActivityAction>
            </ueab:ExcelApplicationCard.Body>
            <ueab:ExcelApplicationCard.WorkbookPath>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_457">in_ConfigPath</CSharpValue>
              </InArgument>
            </ueab:ExcelApplicationCard.WorkbookPath>
          </ueab:ExcelApplicationCard>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <ui:RenameFileX DisplayName="Rename Config" sap:VirtualizedContainerService.HintSize="666,143" sap2010:WorkflowViewState.IdRef="RenameFileX_4" KeepExtension="True">
      <ui:RenameFileX.FilePath>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_458">in_ConfigPath</CSharpValue>
        </InArgument>
      </ui:RenameFileX.FilePath>
      <ui:RenameFileX.NewName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_454">ConfigName</CSharpValue>
        </InArgument>
      </ui:RenameFileX.NewName>
    </ui:RenameFileX>
    <ui:LogMessage DisplayName="LM: Complete" sap:VirtualizedContainerService.HintSize="666,141" sap2010:WorkflowViewState.IdRef="LogMessage_5">
      <ui:LogMessage.Level>
        <InArgument x:TypeArguments="ui:LogLevel">
          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_469">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
        </InArgument>
      </ui:LogMessage.Level>
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_470">"Completed updating the config file"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>