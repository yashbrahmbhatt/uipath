<Activity mc:Ignorable="sap sap2010" x:Class="AddModules" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="985,4690" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ufa="clr-namespace:UiPath.Form.Activities;assembly=UiPath.Form.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.ReaderWriter</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Accelerates creating new modules by prompting the user for set of modules they want to create, and copies the configs, templates, and all workflow files for that module." DisplayName="AddModules" sap:VirtualizedContainerService.HintSize="817,4625" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Modules">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">new DataTable()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:Dictionary(x:String, njl:JObject)" Name="ModuleConfigsDictionary" />
      <Variable x:TypeArguments="x:String" Name="AddModulesOutput" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="LM: Start" sap:VirtualizedContainerService.HintSize="755,141" sap2010:WorkflowViewState.IdRef="LogMessage_1">
      <ui:LogMessage.Level>
        <InArgument x:TypeArguments="ui:LogLevel">
          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
        </InArgument>
      </ui:LogMessage.Level>
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">"Starting AddModules"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <Sequence DisplayName="Get Module Configs" sap:VirtualizedContainerService.HintSize="755,81" sap2010:WorkflowViewState.IdRef="Sequence_30">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:List(x:String)" Name="ModuleConfigPaths" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="" sap:VirtualizedContainerService.HintSize="499,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_21">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">
                  <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_122">ModuleConfigPaths</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">
                  <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_273">Directory.GetFiles(Directory.GetCurrentDirectory(), "module.config", SearchOption.AllDirectories).Select(f =&gt; Path.GetRelativePath(Directory.GetCurrentDirectory(), f)).ToList()</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, njl:JObject)">
                  <CSharpReference x:TypeArguments="scg:Dictionary(x:String, njl:JObject)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">ModuleConfigsDictionary</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, njl:JObject)">
                  <CSharpValue x:TypeArguments="scg:Dictionary(x:String, njl:JObject)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">new Dictionary&lt;string, JObject&gt;()</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Read All Module Configs" sap:VirtualizedContainerService.HintSize="499,557" sap2010:WorkflowViewState.IdRef="ForEach`1_7">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="ModuleConfigPath" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Add Config" sap:VirtualizedContainerService.HintSize="465,371" sap2010:WorkflowViewState.IdRef="Sequence_31">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="Raw" />
                <Variable x:TypeArguments="njl:JObject" Name="ConfigValueJObj" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadTextFile File="{x:Null}" DisplayName="Read module.config" sap:VirtualizedContainerService.HintSize="423,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_4">
                <ui:ReadTextFile.Content>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">Raw</CSharpReference>
                  </OutArgument>
                </ui:ReadTextFile.Content>
                <ui:ReadTextFile.FileName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">ModuleConfigPath</CSharpValue>
                  </InArgument>
                </ui:ReadTextFile.FileName>
              </ui:ReadTextFile>
              <ui:MultipleAssign DisplayName="Add Value" sap:VirtualizedContainerService.HintSize="423,163" sap2010:WorkflowViewState.IdRef="MultipleAssign_22">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="njl:JObject">
                          <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_120">ConfigValueJObj</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="njl:JObject">
                          <CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_268">JsonConvert.DeserializeObject&lt;JObject&gt;(Raw)</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="njl:JToken">
                          <CSharpReference x:TypeArguments="njl:JToken" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">ConfigValueJObj["Root"]</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="njl:JToken">
                          <CSharpValue x:TypeArguments="njl:JToken" sap2010:WorkflowViewState.IdRef="CSharpValue`1_383">Path.GetRelativePath(Directory.GetCurrentDirectory(), ModuleConfigPath).Replace("\\" + Path.GetFileName(ModuleConfigPath),"")</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="njl:JObject">
                          <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">ModuleConfigsDictionary[ConfigValueJObj["ID"].ToString()]</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="njl:JObject">
                          <CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_269">ConfigValueJObj</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <ui:ForEach.Values>
          <InArgument x:TypeArguments="sc:IEnumerable">
            <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">ModuleConfigPaths</CSharpValue>
          </InArgument>
        </ui:ForEach.Values>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
    <Sequence DisplayName="Add Modules Form" sap:VirtualizedContainerService.HintSize="755,81" sap2010:WorkflowViewState.IdRef="Sequence_32">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:List(x:String)" Name="ModuleTypes" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="LM: Form Start" sap:VirtualizedContainerService.HintSize="423,141" sap2010:WorkflowViewState.IdRef="LogMessage_2">
        <ui:LogMessage.Level>
          <InArgument x:TypeArguments="ui:LogLevel">
            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
          </InArgument>
        </ui:LogMessage.Level>
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">"Showing form..."</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:MultipleAssign DisplayName="Parse Config" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">
                  <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_91">ModuleTypes</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">
                  <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_250">ModuleConfigsDictionary.Values.Select(r =&gt; r["Name"].ToString()).ToList()</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ufa:FormActivity CreateFormActivityFileName="{x:Null}" CreateFormActivityFilePath="{x:Null}" Dismissed="{x:Null}" FormFieldsInputData="{x:Null}" FormTitle="{x:Null}" IconPath="{x:Null}" LocalCSSFilePath="{x:Null}" SelectedButton="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" CreateFormId="c6c4f422-7c9a-4502-a04f-f74b67facbf6" DevTools="False" DisableMaximizeButton="False" DisableMinimizeButton="False" DisableSanitize="False" DisplayName="Show Add Modules Form" EnableAccessibility="False" FormHeight="400" FormSchema="%[{&quot;label&quot;:&quot;Modules&quot;,&quot;description&quot;:&quot;The modules to add.&quot;,&quot;tooltip&quot;:&quot;The modules to add.&quot;,&quot;reorder&quot;:false,&quot;addAnotherPosition&quot;:&quot;bottom&quot;,&quot;layoutFixed&quot;:false,&quot;enableRowGroups&quot;:false,&quot;initEmpty&quot;:false,&quot;key&quot;:&quot;Modules&quot;,&quot;type&quot;:&quot;datagrid&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the module. Cannot conflict with an existing folder within the 'Root' provided.&quot;,&quot;tooltip&quot;:&quot;The name of the module. Cannot conflict with an existing folder within the 'Root' provided.&quot;,&quot;tableView&quot;:true,&quot;validate&quot;:{&quot;required&quot;:true},&quot;key&quot;:&quot;Name&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Type&quot;,&quot;description&quot;:&quot;The type of module to add.&quot;,&quot;tooltip&quot;:&quot;The type of module to add.&quot;,&quot;tableView&quot;:true,&quot;data&quot;:{&quot;values&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}]},&quot;validate&quot;:{&quot;required&quot;:true,&quot;onlyAvailableItems&quot;:true},&quot;key&quot;:&quot;Type&quot;,&quot;type&quot;:&quot;select&quot;,&quot;indexeddb&quot;:{&quot;filter&quot;:{}},&quot;input&quot;:true},{&quot;label&quot;:&quot;Root&quot;,&quot;customClass&quot;:&quot;folderPath&quot;,&quot;showAllFileTypes&quot;:true,&quot;validate&quot;:{&quot;required&quot;:true},&quot;key&quot;:&quot;Root&quot;,&quot;input&quot;:true,&quot;suffix&quot;:&quot;Select &quot;,&quot;tableView&quot;:true,&quot;type&quot;:&quot;filePath&quot;}]},{&quot;type&quot;:&quot;button&quot;,&quot;label&quot;:&quot;Submit&quot;,&quot;key&quot;:&quot;submit&quot;,&quot;disableOnInvalid&quot;:true,&quot;input&quot;:true,&quot;tableView&quot;:false}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;100120&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;BaseCss&quot;:&quot;./assets/css/themes/uipath.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;./assets/themeicons/uipath.png&quot;,&quot;OverrideCssUrl&quot;:&quot;./assets/css/themes/uipath.custom.css&quot;,&quot;UserStyleOverrides&quot;:&quot;&quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:false,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" FormWidth="800" GenerateInputFields="False" sap:VirtualizedContainerService.HintSize="423,142" sap2010:WorkflowViewState.IdRef="FormActivity_1" IsReadOnly="False" MaxColumnsForSchemaGeneration="12" RunDoBlockFirst="False" RunInIsolatedMode="True" StartAsMinimized="False">
        <ufa:FormActivity.Body>
          <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
        </ufa:FormActivity.Body>
        <ufa:FormActivity.DelayBody>
          <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
        </ufa:FormActivity.DelayBody>
        <ufa:FormActivity.FormFieldsCollection>
          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="Modules">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">dt_Modules</CSharpReference>
          </InOutArgument>
          <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="Type_dropdown">
            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">ModuleTypes</CSharpReference>
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="Type_parent">Modules</InArgument>
        </ufa:FormActivity.FormFieldsCollection>
        <ufa:FormActivity.FormFieldsOutputData>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_92">AddModulesOutput</CSharpReference>
          </OutArgument>
        </ufa:FormActivity.FormFieldsOutputData>
      </ufa:FormActivity>
      <ui:MultipleAssign DisplayName="Get Modules Table" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_15">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="AssignOperation_27">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">dt_Modules</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211" xml:space="preserve">JsonConvert.DeserializeObject&lt;DataTable&gt;(
	JsonConvert.SerializeObject(
		JsonConvert.DeserializeObject&lt;Newtonsoft.Json.Linq.JObject&gt;(
			AddModulesOutput
		)["Modules"]
	)
)</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:LogMessage DisplayName="LM: Form Complete" sap:VirtualizedContainerService.HintSize="423,141" sap2010:WorkflowViewState.IdRef="LogMessage_3">
        <ui:LogMessage.Level>
          <InArgument x:TypeArguments="ui:LogLevel">
            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
          </InArgument>
        </ui:LogMessage.Level>
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">string.Format("Form submitted. {0} rows to process.", dt_Modules == null ? "0" : dt_Modules.RowCount())</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
    </Sequence>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Module" sap:VirtualizedContainerService.HintSize="755,4049" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Create Module" sap:VirtualizedContainerService.HintSize="721,3932" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="Type" />
              <Variable x:TypeArguments="s:String[]" Name="ModuleFiles" />
              <Variable x:TypeArguments="x:String" Name="ModuleRoot" />
              <Variable x:TypeArguments="scg:List(x:String)" Name="ModuleConfigPaths" />
              <Variable x:TypeArguments="x:String" Name="Root" />
              <Variable x:TypeArguments="njl:JObject" Name="ConfigJObj" />
              <Variable x:TypeArguments="scg:List(x:String)" Name="WorkflowFiles" />
              <Variable x:TypeArguments="scg:List(x:String)" Name="ConfigFiles" />
              <Variable x:TypeArguments="x:String" Name="Name" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="LM: Module Start" sap:VirtualizedContainerService.HintSize="659,141" sap2010:WorkflowViewState.IdRef="LogMessage_4">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">string.Format("Processing module '{0}'", CurrentRow["Name"].ToString())</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:MultipleAssign DisplayName="Parse Values" sap:VirtualizedContainerService.HintSize="659,52" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_154">Name</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">CurrentRow["Name"].ToString()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">Type</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">CurrentRow["Type"].ToString()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">Root</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_310">Path.GetRelativePath(Directory.GetCurrentDirectory(), Path.Combine(CurrentRow["Root"].ToString().Replace("/","\\"), Name))</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="njl:JObject">
                        <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_95">ConfigJObj</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="njl:JObject">
                        <CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_270">ModuleConfigsDictionary.Values.First(mc =&gt; mc["Name"].ToString() == Type)</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">ModuleRoot</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_217">ConfigJObj["Root"].ToString()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">
                        <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_103">ModuleConfigPaths</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)">
                        <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_271">((JArray)ConfigJObj["Configs"]).Select(f =&gt; Path.Combine(ModuleRoot, f.ToString())).ToList()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="s:String[]">
                        <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">ModuleFiles</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="s:String[]">
                        <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_279">Directory.GetFiles(ModuleRoot, "*", SearchOption.AllDirectories).Select(f =&gt; Path.GetRelativePath(Directory.GetCurrentDirectory(), f)).ToArray()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">
                        <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_104">WorkflowFiles</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)">
                        <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_236">ModuleFiles.Where(p =&gt; p.EndsWith(".xaml")).Select(p =&gt; p.Replace(ModuleRoot, Root)).ToList()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_52">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">
                        <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_105">ConfigFiles</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)">
                        <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_237">ModuleConfigPaths.Select(p =&gt; p.Replace(ModuleRoot, Root)).ToList()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Copy All Files From Modules Root" sap:VirtualizedContainerService.HintSize="659,52" sap2010:WorkflowViewState.IdRef="ForEach`1_6">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="ModuleFile" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="465,475" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="TargetFilePath" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Set Target Path" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_28">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_53">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_106">TargetFilePath</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_241">ModuleFile.Replace(ModuleRoot, Root)</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <If DisplayName="File Folder Exists?" sap:VirtualizedContainerService.HintSize="423,52" sap2010:WorkflowViewState.IdRef="If_8">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">!Directory.Exists(Path.GetDirectoryName(TargetFilePath))</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create File Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_5">
                          <ui:CreateDirectory.Path>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">Path.GetDirectoryName(TargetFilePath)</CSharpValue>
                            </InArgument>
                          </ui:CreateDirectory.Path>
                        </ui:CreateDirectory>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_25">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:CopyFile ContinueOnError="{x:Null}" DisplayName="Copy Other File" sap:VirtualizedContainerService.HintSize="423,154" sap2010:WorkflowViewState.IdRef="CopyFile_7">
                      <ui:CopyFile.Destination>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_239">TargetFilePath</CSharpValue>
                        </InArgument>
                      </ui:CopyFile.Destination>
                      <ui:CopyFile.Path>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_240">ModuleFile</CSharpValue>
                        </InArgument>
                      </ui:CopyFile.Path>
                    </ui:CopyFile>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <ui:ForEach.Values>
                <InArgument x:TypeArguments="sc:IEnumerable">
                  <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">ModuleFiles</CSharpValue>
                </InArgument>
              </ui:ForEach.Values>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Config File" sap:VirtualizedContainerService.HintSize="659,52" sap2010:WorkflowViewState.IdRef="ForEach`1_13">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="ConfigFile" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="530,1467" sap2010:WorkflowViewState.IdRef="Sequence_42">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="ConfigOutput" />
                      <Variable x:TypeArguments="sd:DataSet" Name="ConfigDataSet" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dt_Config" />
                      <Variable x:TypeArguments="sd:DataSet" Name="FormattedDataSet" />
                      <Variable x:TypeArguments="njl:JObject" Name="JObj" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dt_Assets" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dt_ExcelFiles" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dt_TextFiles" />
                      <Variable x:TypeArguments="sd:DataRow" Name="MatchingRow" />
                      <Variable x:TypeArguments="x:String" Name="ConfigName" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Shared\\ReadExcelFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="488,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Shared\\ReadExcelFile.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_251">ConfigFile</CSharpValue>
                        </InArgument>
                        <OutArgument x:TypeArguments="sd:DataSet" x:Key="out_DataSet">
                          <CSharpReference x:TypeArguments="sd:DataSet" sap2010:WorkflowViewState.IdRef="CSharpReference`1_110">ConfigDataSet</CSharpReference>
                        </OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:BuildDataTable DisplayName="Initialize Config Table" sap:VirtualizedContainerService.HintSize="488,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Description&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                      <ui:BuildDataTable.DataTable>
                        <OutArgument x:TypeArguments="sd:DataTable">
                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_111">dt_Config</CSharpReference>
                        </OutArgument>
                      </ui:BuildDataTable.DataTable>
                    </ui:BuildDataTable>
                    <ui:MultipleAssign DisplayName="FormattedDataSet" sap:VirtualizedContainerService.HintSize="488,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_35">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_61">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="sd:DataSet">
                                <CSharpReference x:TypeArguments="sd:DataSet" sap2010:WorkflowViewState.IdRef="CSharpReference`1_130">FormattedDataSet</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="sd:DataSet">
                                <CSharpValue x:TypeArguments="sd:DataSet" sap2010:WorkflowViewState.IdRef="CSharpValue`1_302">new DataSet()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_80">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_149">ConfigName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_342">Name + "Config"</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <ui:ForEach x:TypeArguments="sd:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each Table in Config" sap:VirtualizedContainerService.HintSize="488,52" sap2010:WorkflowViewState.IdRef="ForEach`1_14">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="sd:DataTable">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataTable" Name="CurrentTable" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Parse Current Config Table" sap:VirtualizedContainerService.HintSize="476,1030" sap2010:WorkflowViewState.IdRef="Sequence_49">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="dt_NewTable" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_34">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_59">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="sd:DataTable">
                                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_127">dt_NewTable</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="sd:DataTable">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_296">CurrentTable.Copy()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_60">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_128">dt_NewTable.TableName</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_297">CurrentTable.TableName</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                            <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="434,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" SelectColumnsMode="Remove">
                              <ui:FilterDataTable.DataTable>
                                <InArgument x:TypeArguments="sd:DataTable">
                                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_298">dt_NewTable</CSharpValue>
                                </InArgument>
                              </ui:FilterDataTable.DataTable>
                              <ui:FilterDataTable.Filters>
                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                  <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                    <ui:FilterOperationArgument.Column>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_284">"Name"</CSharpValue>
                                      </InArgument>
                                    </ui:FilterOperationArgument.Column>
                                  </ui:FilterOperationArgument>
                                </scg:List>
                              </ui:FilterDataTable.Filters>
                              <ui:FilterDataTable.OutputDataTable>
                                <OutArgument x:TypeArguments="sd:DataTable">
                                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_129">dt_NewTable</CSharpReference>
                                </OutArgument>
                              </ui:FilterDataTable.OutputDataTable>
                              <ui:FilterDataTable.SelectColumns>
                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                  <x:Null />
                                </scg:List>
                              </ui:FilterDataTable.SelectColumns>
                            </ui:FilterDataTable>
                            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="Update Paths" sap:VirtualizedContainerService.HintSize="434,301" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="NewTableRow" />
                                  </ActivityAction.Argument>
                                  <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="Column" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="ForEach`1_18">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="sd:DataColumn">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="currentItem" />
                                        </ActivityAction.Argument>
                                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_36">
                                          <ui:MultipleAssign.AssignOperations>
                                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_62">
                                                <ui:AssignOperation.To>
                                                  <OutArgument x:TypeArguments="x:Object">
                                                    <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_131">NewTableRow[currentItem]</CSharpReference>
                                                  </OutArgument>
                                                </ui:AssignOperation.To>
                                                <ui:AssignOperation.Value>
                                                  <InArgument x:TypeArguments="x:Object">
                                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_311" xml:space="preserve">NewTableRow[currentItem].ToString()
.Replace(ModuleRoot, Root)</CSharpValue>
                                                  </InArgument>
                                                </ui:AssignOperation.Value>
                                              </ui:AssignOperation>
                                            </scg:List>
                                          </ui:MultipleAssign.AssignOperations>
                                        </ui:MultipleAssign>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <ui:ForEach.Values>
                                      <InArgument x:TypeArguments="sc:IEnumerable">
                                        <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_309">dt_NewTable.Columns</CSharpValue>
                                      </InArgument>
                                    </ui:ForEach.Values>
                                  </ui:ForEach>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                              <ui:ForEachRow.DataTable>
                                <InArgument x:TypeArguments="sd:DataTable">
                                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_308">dt_NewTable</CSharpValue>
                                </InArgument>
                              </ui:ForEachRow.DataTable>
                            </ui:ForEachRow>
                            <If DisplayName="Not Excel or Text Files" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="If_11">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_289">CurrentTable.TableName != "TextFiles" &amp;&amp; ((DataTable)CurrentTable).TableName != "ExcelFiles" &amp;&amp; ((DataTable)CurrentTable).TableName != "Assets"</CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Generic Table" sap:VirtualizedContainerService.HintSize="376,221" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MergeDataTable DisplayName="Merge Current Table" sap:VirtualizedContainerService.HintSize="334,133" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Add">
                                    <ui:MergeDataTable.Destination>
                                      <InOutArgument x:TypeArguments="sd:DataTable">
                                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_117">dt_Config</CSharpReference>
                                      </InOutArgument>
                                    </ui:MergeDataTable.Destination>
                                    <ui:MergeDataTable.Source>
                                      <InArgument x:TypeArguments="sd:DataTable">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_299">dt_NewTable</CSharpValue>
                                      </InArgument>
                                    </ui:MergeDataTable.Source>
                                  </ui:MergeDataTable>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,274" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="Update Columns (Special)" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="ForEach`1_16">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="sd:DataColumn">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="DataColumn" />
                                        </ActivityAction.Argument>
                                        <ui:MultipleAssign DisplayName="Update Column (Special)" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_31">
                                          <ui:MultipleAssign.AssignOperations>
                                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_56">
                                                <ui:AssignOperation.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_119">DataColumn.ColumnName</CSharpReference>
                                                  </OutArgument>
                                                </ui:AssignOperation.To>
                                                <ui:AssignOperation.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_301">dt_NewTable.TableName + DataColumn.ColumnName</CSharpValue>
                                                  </InArgument>
                                                </ui:AssignOperation.Value>
                                              </ui:AssignOperation>
                                            </scg:List>
                                          </ui:MultipleAssign.AssignOperations>
                                        </ui:MultipleAssign>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <ui:ForEach.Values>
                                      <InArgument x:TypeArguments="sc:IEnumerable">
                                        <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_300">dt_NewTable.Columns</CSharpValue>
                                      </InArgument>
                                    </ui:ForEach.Values>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEach>
                                </Sequence>
                              </If.Else>
                            </If>
                            <InvokeMethod DisplayName="Add Table to DataSet" sap:VirtualizedContainerService.HintSize="434,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="sd:DataTableCollection">
                                  <CSharpValue x:TypeArguments="sd:DataTableCollection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_303">FormattedDataSet.Tables</CSharpValue>
                                </InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="sd:DataTable">
                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_304">dt_NewTable</CSharpValue>
                              </InArgument>
                            </InvokeMethod>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <ui:ForEach.Values>
                        <InArgument x:TypeArguments="sc:IEnumerable">
                          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_252">ConfigDataSet.Tables</CSharpValue>
                        </InArgument>
                      </ui:ForEach.Values>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEach>
                    <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="Update Columns" sap:VirtualizedContainerService.HintSize="488,52" sap2010:WorkflowViewState.IdRef="ForEach`1_17">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="sd:DataColumn">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="Column" />
                          </ActivityAction.Argument>
                          <ui:MultipleAssign DisplayName="Update Column" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_32">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_57">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_123">Column.ColumnName</CSharpReference>
                                    </OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_281">"Config" + Column.ColumnName</CSharpValue>
                                    </InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <ui:ForEach.Values>
                        <InArgument x:TypeArguments="sc:IEnumerable">
                          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_280">dt_Config.Columns</CSharpValue>
                        </InArgument>
                      </ui:ForEach.Values>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEach>
                    <ufa:FormActivity CreateFormActivityFileName="{x:Null}" CreateFormActivityFilePath="{x:Null}" Dismissed="{x:Null}" FormFieldsInputData="{x:Null}" FormHeight="{x:Null}" FormTitle="{x:Null}" FormWidth="{x:Null}" IconPath="{x:Null}" LocalCSSFilePath="{x:Null}" SelectedButton="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" CreateFormId="7113832b-5ec0-48a7-bc70-ce1376e42569" DevTools="False" DisableMaximizeButton="False" DisableMinimizeButton="False" DisableSanitize="False" DisplayName="Create Config Form" EnableAccessibility="False" FormSchema="%[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;Please provide a unique name for this config file.&quot;,&quot;tooltip&quot;:&quot;Please provide a unique name for this config file.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;Name&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Config&quot;,&quot;description&quot;:&quot;The config values to set.&quot;,&quot;tooltip&quot;:&quot;The config values to set.&quot;,&quot;disableAddingRemovingRows&quot;:true,&quot;reorder&quot;:false,&quot;addAnotherPosition&quot;:&quot;bottom&quot;,&quot;layoutFixed&quot;:false,&quot;enableRowGroups&quot;:false,&quot;initEmpty&quot;:false,&quot;redrawOn&quot;:&quot;data&quot;,&quot;key&quot;:&quot;Config&quot;,&quot;type&quot;:&quot;datagrid&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the setting.&quot;,&quot;tooltip&quot;:&quot;The name of the setting.&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ConfigName&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;ConfigDescription&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Value&quot;,&quot;description&quot;:&quot;The value of the setting.&quot;,&quot;tooltip&quot;:&quot;The value of the setting.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ConfigValue&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true}]},{&quot;label&quot;:&quot;Assets&quot;,&quot;description&quot;:&quot;The assets to set.&quot;,&quot;tooltip&quot;:&quot;The assets to set.&quot;,&quot;disableAddingRemovingRows&quot;:true,&quot;reorder&quot;:false,&quot;addAnotherPosition&quot;:&quot;bottom&quot;,&quot;layoutFixed&quot;:false,&quot;enableRowGroups&quot;:false,&quot;initEmpty&quot;:false,&quot;redrawOn&quot;:&quot;data&quot;,&quot;key&quot;:&quot;Assets&quot;,&quot;type&quot;:&quot;datagrid&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the asset.&quot;,&quot;tooltip&quot;:&quot;The name of the asset.&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;AssetsName&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;AssetsDescription&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Value&quot;,&quot;description&quot;:&quot;The name of the asset.&quot;,&quot;tooltip&quot;:&quot;The name of the asset.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;AssetsValue&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Folder&quot;,&quot;description&quot;:&quot;The folder that houses the asset.&quot;,&quot;tooltip&quot;:&quot;The folder that houses the asset.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;AssetsFolder&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true}]},{&quot;label&quot;:&quot;Text Files&quot;,&quot;description&quot;:&quot;The text file resources to use.&quot;,&quot;tooltip&quot;:&quot;The text file resources to use.&quot;,&quot;disableAddingRemovingRows&quot;:true,&quot;reorder&quot;:false,&quot;addAnotherPosition&quot;:&quot;bottom&quot;,&quot;layoutFixed&quot;:false,&quot;enableRowGroups&quot;:false,&quot;initEmpty&quot;:false,&quot;redrawOn&quot;:&quot;data&quot;,&quot;key&quot;:&quot;TextFiles&quot;,&quot;type&quot;:&quot;datagrid&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the text file resource.&quot;,&quot;tooltip&quot;:&quot;The name of the text file resource.&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;TextFilesName&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;TextFilesDescription&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Path&quot;,&quot;description&quot;:&quot;The path to the resource. Used for both local and storage bucket sources.&quot;,&quot;tooltip&quot;:&quot;The path to the resource. Used for both local and storage bucket sources.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;TextFilesPath&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Bucket&quot;,&quot;description&quot;:&quot;The storage bucket that contains the text resource. Only set if using a storage bucket resource.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;TextFilesBucket&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Folder&quot;,&quot;description&quot;:&quot;The folder that houses the storage bucket.&quot;,&quot;tooltip&quot;:&quot;The folder that houses the storage bucket.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;TextFilesFolder&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true}]},{&quot;label&quot;:&quot;Excel Files&quot;,&quot;description&quot;:&quot;The excel files to use.&quot;,&quot;tooltip&quot;:&quot;The excel files to use.&quot;,&quot;disableAddingRemovingRows&quot;:true,&quot;reorder&quot;:false,&quot;addAnotherPosition&quot;:&quot;bottom&quot;,&quot;layoutFixed&quot;:false,&quot;enableRowGroups&quot;:false,&quot;initEmpty&quot;:false,&quot;redrawOn&quot;:&quot;data&quot;,&quot;key&quot;:&quot;ExcelFiles&quot;,&quot;type&quot;:&quot;datagrid&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the asset.&quot;,&quot;tooltip&quot;:&quot;The name of the asset.&quot;,&quot;disabled&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ExcelFilesName&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;ExcelFilesDescription&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Path&quot;,&quot;description&quot;:&quot;The path to the resource. Used for both local and storage bucket sources.&quot;,&quot;tooltip&quot;:&quot;The path to the resource. Used for both local and storage bucket sources.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ExcelFilesPath&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Bucket&quot;,&quot;description&quot;:&quot;The storage bucket that contains the text resource. Only set if using a storage bucket resource.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ExcelFilesBucket&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Folder&quot;,&quot;description&quot;:&quot;The folder that houses the storage bucket.&quot;,&quot;tooltip&quot;:&quot;The folder that houses the storage bucket.&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;ExcelFilesFolder&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true}]},{&quot;type&quot;:&quot;button&quot;,&quot;label&quot;:&quot;Submit&quot;,&quot;key&quot;:&quot;submit&quot;,&quot;disableOnInvalid&quot;:true,&quot;input&quot;:true,&quot;tableView&quot;:false}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;100120&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;BaseCss&quot;:&quot;./assets/css/themes/uipath.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;./assets/themeicons/uipath.png&quot;,&quot;OverrideCssUrl&quot;:&quot;./assets/css/themes/uipath.custom.css&quot;,&quot;UserStyleOverrides&quot;:&quot;&quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:false,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" GenerateInputFields="False" sap:VirtualizedContainerService.HintSize="488,230" sap2010:WorkflowViewState.IdRef="FormActivity_2" IsReadOnly="False" MaxColumnsForSchemaGeneration="6" RunDoBlockFirst="False" RunInIsolatedMode="True" StartAsMinimized="False">
                      <ufa:FormActivity.Body>
                        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,103" sap2010:WorkflowViewState.IdRef="Sequence_43">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </ActivityAction>
                      </ufa:FormActivity.Body>
                      <ufa:FormActivity.DelayBody>
                        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                          <Delay Duration="00:00:00.2500000" sap2010:WorkflowViewState.IdRef="Delay_1" />
                        </ActivityAction>
                      </ufa:FormActivity.DelayBody>
                      <ufa:FormActivity.FormFieldsCollection>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="Config">
                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_261">dt_Config</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="Assets">
                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_307">FormattedDataSet.Tables["Assets"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="TextFiles">
                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_306">FormattedDataSet.Tables["TextFiles"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="ExcelFiles">
                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_305">FormattedDataSet.Tables["ExcelFiles"]</CSharpValue>
                        </InArgument>
                        <InOutArgument x:TypeArguments="x:String" x:Key="Name">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_150">ConfigName</CSharpReference>
                        </InOutArgument>
                      </ufa:FormActivity.FormFieldsCollection>
                      <ufa:FormActivity.FormFieldsOutputData>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">ConfigOutput</CSharpReference>
                        </OutArgument>
                      </ufa:FormActivity.FormFieldsOutputData>
                    </ufa:FormActivity>
                    <ui:MultipleAssign DisplayName="Get Results" sap:VirtualizedContainerService.HintSize="488,225" sap2010:WorkflowViewState.IdRef="MultipleAssign_37">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_63">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="njl:JObject">
                                <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_132">JObj</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="njl:JObject">
                                <CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_312">JObject.Parse(ConfigOutput)</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_64">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="sd:DataTable">
                                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_133">dt_Config</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="sd:DataTable">
                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_313">JsonConvert.DeserializeObject&lt;DataTable&gt;(JsonConvert.SerializeObject(JObj["Config"]))</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_65">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="sd:DataTable">
                                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_134">dt_Assets</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="sd:DataTable">
                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_317">JsonConvert.DeserializeObject&lt;DataTable&gt;(JsonConvert.SerializeObject(JObj["Assets"]))</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_66">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="sd:DataTable">
                                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_135">dt_TextFiles</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="sd:DataTable">
                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_318">JsonConvert.DeserializeObject&lt;DataTable&gt;(JsonConvert.SerializeObject(JObj["TextFiles"]))</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_67">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="sd:DataTable">
                                <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_136">dt_ExcelFiles</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="sd:DataTable">
                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_319">JsonConvert.DeserializeObject&lt;DataTable&gt;(JsonConvert.SerializeObject(JObj["ExcelFiles"]))</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <ueab:ExcelProcessScopeX LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Excel Process Scope" ExistingProcessAction="None" FileConflictResolution="None" sap:VirtualizedContainerService.HintSize="488,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2" LaunchMethod="Automation" MacroSettings="EnableAll" ProcessMode="ReuseIfExists" ShowExcelWindow="False">
                      <ueab:ExcelProcessScopeX.Body>
                        <ActivityAction x:TypeArguments="ui:IExcelProcess">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                          </ActivityAction.Argument>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="502,789" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                </ActivityAction.Argument>
                                <ueab:ForEachSheetX DisplayName="For Each Excel Sheet" sap:VirtualizedContainerService.HintSize="468,520" sap2010:WorkflowViewState.IdRef="ForEachSheetX_3">
                                  <ueab:ForEachSheetX.Body>
                                    <ActivityAction x:TypeArguments="ue:WorksheetQuickHandle, x:Int32">
                                      <ActivityAction.Argument1>
                                        <DelegateInArgument x:TypeArguments="ue:WorksheetQuickHandle" Name="CurrentSheet" />
                                      </ActivityAction.Argument1>
                                      <ActivityAction.Argument2>
                                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                      </ActivityAction.Argument2>
                                      <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="434,364" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_2" SaveAfterEachRow="False">
                                        <ueab:ExcelForEachRowX.Body>
                                          <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                            <ActivityAction.Argument1>
                                              <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="ConfigRow" />
                                            </ActivityAction.Argument1>
                                            <ActivityAction.Argument2>
                                              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                            </ActivityAction.Argument2>
                                            <If DisplayName="Not Empty?" sap:VirtualizedContainerService.HintSize="334,182" sap2010:WorkflowViewState.IdRef="If_12">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_323">!string.IsNullOrEmpty(ConfigRow["Name"])</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <If.Then>
                                                <Switch x:TypeArguments="x:String" DisplayName="Switch" sap:VirtualizedContainerService.HintSize="496,422" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                                  <Switch.Default>
                                                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_40">
                                                      <ui:MultipleAssign.AssignOperations>
                                                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_75">
                                                            <ui:AssignOperation.To>
                                                              <OutArgument x:TypeArguments="ue:ExcelValue">
                                                                <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_144">ConfigRow["Name"]</CSharpReference>
                                                              </OutArgument>
                                                            </ui:AssignOperation.To>
                                                            <ui:AssignOperation.Value>
                                                              <InArgument x:TypeArguments="ue:ExcelValue">
                                                                <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_333">dt_Config.AsEnumerable().First(r =&gt; r["ConfigName"].ToString() == ConfigRow["Name"].ToString())["ConfigValue"].ToString()</CSharpValue>
                                                              </InArgument>
                                                            </ui:AssignOperation.Value>
                                                          </ui:AssignOperation>
                                                        </scg:List>
                                                      </ui:MultipleAssign.AssignOperations>
                                                    </ui:MultipleAssign>
                                                  </Switch.Default>
                                                  <Switch.Expression>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_324">CurrentSheet.Name</CSharpValue>
                                                    </InArgument>
                                                  </Switch.Expression>
                                                  <ui:MultipleAssign x:Key="Assets" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,163" sap2010:WorkflowViewState.IdRef="MultipleAssign_38">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_68">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="sd:DataRow">
                                                              <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_137">MatchingRow</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="sd:DataRow">
                                                              <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_339">dt_Assets.AsEnumerable().First(r =&gt; r["AssetsName"].ToString() == ConfigRow["Name"].ToString())</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_69">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_138">ConfigRow["Value"]</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_327">MatchingRow["AssetsValue"].ToString()</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_70">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_139">ConfigRow["Folder"]</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_328">MatchingRow["AssetsFolder"].ToString()</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                  </ui:MultipleAssign>
                                                  <ui:MultipleAssign x:Key="TextFiles" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_39">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_71">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="sd:DataRow">
                                                              <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_140">MatchingRow</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="sd:DataRow">
                                                              <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_340">dt_TextFiles.AsEnumerable().First(r =&gt; r["TextFilesName"].ToString() == ConfigRow["Name"].ToString())</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_72">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_141">ConfigRow["Path"]</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_330">MatchingRow["TextFilesPath"].ToString()</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_73">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_142">ConfigRow["Folder"]</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_331">MatchingRow["TextFilesFolder"].ToString()</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_74">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_143">ConfigRow["Bucket"]</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_332">MatchingRow["TextFilesBucket"].ToString()</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                  </ui:MultipleAssign>
                                                  <ui:MultipleAssign x:Key="ExcelFiles" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_41">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_76">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="sd:DataRow">
                                                              <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_145">MatchingRow</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="sd:DataRow">
                                                              <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_341">dt_ExcelFiles.AsEnumerable().First(r =&gt; r["ExcelFilesName"].ToString() == ConfigRow["Name"].ToString())</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_77">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_146">ConfigRow["Path"]</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_335">MatchingRow["ExcelFilesPath"].ToString()</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_78">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_147">ConfigRow["Folder"]</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_353">MatchingRow["ExcelFilesFolder"].ToString()</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_79">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpReference x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpReference`1_148">ConfigRow["Bucket"]</CSharpReference>
                                                            </OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="ue:ExcelValue">
                                                              <CSharpValue x:TypeArguments="ue:ExcelValue" sap2010:WorkflowViewState.IdRef="CSharpValue`1_354">MatchingRow["ExcelFilesBucket"].ToString()</CSharpValue>
                                                            </InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                  </ui:MultipleAssign>
                                                </Switch>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_54" />
                                              </If.Else>
                                            </If>
                                          </ActivityAction>
                                        </ueab:ExcelForEachRowX.Body>
                                        <ueab:ExcelForEachRowX.Range>
                                          <InArgument x:TypeArguments="ue:IReadRangeRef">
                                            <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_325">CurrentSheet</CSharpValue>
                                          </InArgument>
                                        </ueab:ExcelForEachRowX.Range>
                                      </ueab:ExcelForEachRowX>
                                    </ActivityAction>
                                  </ueab:ForEachSheetX.Body>
                                  <ueab:ForEachSheetX.Workbook>
                                    <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                                      <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_322">Excel</CSharpValue>
                                    </InArgument>
                                  </ueab:ForEachSheetX.Workbook>
                                </ueab:ForEachSheetX>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                            <ueab:ExcelApplicationCard.WorkbookPath>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_320">ConfigFile</CSharpValue>
                              </InArgument>
                            </ueab:ExcelApplicationCard.WorkbookPath>
                          </ueab:ExcelApplicationCard>
                        </ActivityAction>
                      </ueab:ExcelProcessScopeX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ExcelProcessScopeX>
                    <ui:RenameFileX DisplayName="Rename File" sap:VirtualizedContainerService.HintSize="488,143" sap2010:WorkflowViewState.IdRef="RenameFileX_2" KeepExtension="True">
                      <ui:RenameFileX.FilePath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_343">ConfigFile</CSharpValue>
                        </InArgument>
                      </ui:RenameFileX.FilePath>
                      <ui:RenameFileX.NewName>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_344">ConfigName</CSharpValue>
                        </InArgument>
                      </ui:RenameFileX.NewName>
                    </ui:RenameFileX>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <ui:ForEach.Values>
                <InArgument x:TypeArguments="sc:IEnumerable">
                  <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_249">ConfigFiles</CSharpValue>
                </InArgument>
              </ui:ForEach.Values>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Workflow File" sap:VirtualizedContainerService.HintSize="659,52" sap2010:WorkflowViewState.IdRef="ForEach`1_19">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="WorkflowFile" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Is Workflow" sap:VirtualizedContainerService.HintSize="465,708" sap2010:WorkflowViewState.IdRef="Sequence_40">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="XAMLText" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ReadTextFile File="{x:Null}" DisplayName="Read File" sap:VirtualizedContainerService.HintSize="423,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_6">
                      <ui:ReadTextFile.Content>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">XAMLText</CSharpReference>
                        </OutArgument>
                      </ui:ReadTextFile.Content>
                      <ui:ReadTextFile.FileName>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_243">WorkflowFile</CSharpValue>
                        </InArgument>
                      </ui:ReadTextFile.FileName>
                    </ui:ReadTextFile>
                    <ui:MultipleAssign DisplayName="Replace Invoke Paths" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_29">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_54">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">XAMLText</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_349" xml:space="preserve">XAMLText
.Replace(Directory.GetCurrentDirectory() +"\\", "")
.Replace(ModuleRoot, Path.GetRelativePath(Directory.GetCurrentDirectory(), Root))
.Replace(ModuleRoot.Replace("\\","\\\\"), Path.GetRelativePath(Directory.GetCurrentDirectory(), Root).Replace("\\","\\\\"))
.Replace(Path.GetFileName(Directory.GetFiles(ModuleRoot, "*.xaml").First()).Replace("\\","\\\\"), Name + ".xaml")</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="423,186" sap2010:WorkflowViewState.IdRef="ForEach`1_11">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="465,189" sap2010:WorkflowViewState.IdRef="Sequence_41">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Replace Invoke Paths" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_43">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_83">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_153">XAMLText</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_356" xml:space="preserve">XAMLText
.Replace("GlobalConstants.ConfigPath_" + Path.GetFileNameWithoutExtension(currentText).Replace("Config","Template"), "GlobalConstants.ConfigPath_" + Name)</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <ui:ForEach.Values>
                        <InArgument x:TypeArguments="sc:IEnumerable">
                          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_355">ConfigFiles</CSharpValue>
                        </InArgument>
                      </ui:ForEach.Values>
                    </ui:ForEach>
                    <ui:WriteTextFile File="{x:Null}" DisplayName="Write Target File" sap:VirtualizedContainerService.HintSize="423,133" sap2010:WorkflowViewState.IdRef="WriteTextFile_5">
                      <ui:WriteTextFile.FileName>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_352">WorkflowFile</CSharpValue>
                        </InArgument>
                      </ui:WriteTextFile.FileName>
                      <ui:WriteTextFile.Text>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_246">XAMLText</CSharpValue>
                        </InArgument>
                      </ui:WriteTextFile.Text>
                    </ui:WriteTextFile>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <ui:ForEach.Values>
                <InArgument x:TypeArguments="sc:IEnumerable">
                  <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_242">WorkflowFiles</CSharpValue>
                </InArgument>
              </ui:ForEach.Values>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <ui:RenameFileX DisplayName="Rename Main" sap:VirtualizedContainerService.HintSize="659,143" sap2010:WorkflowViewState.IdRef="RenameFileX_3" KeepExtension="True">
              <ui:RenameFileX.FilePath>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_392">Directory.GetFiles(Root).First()</CSharpValue>
                </InArgument>
              </ui:RenameFileX.FilePath>
              <ui:RenameFileX.NewName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_393">Name</CSharpValue>
                </InArgument>
              </ui:RenameFileX.NewName>
            </ui:RenameFileX>
            <Sequence DisplayName="Add Template Roots to New Project Json Ignore List" sap:VirtualizedContainerService.HintSize="659,2785" sap2010:WorkflowViewState.IdRef="Sequence_55">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="Raw" />
                <Variable x:TypeArguments="njl:JObject" Name="JObj" />
                <Variable x:TypeArguments="njl:JArray" Name="FileInfoCollection" />
                <Variable x:TypeArguments="scg:List(x:String)" Name="FilesToIgnore" />
                <Variable x:TypeArguments="njl:JArray" Name="IgnoredFiles" />
                <Variable x:TypeArguments="scg:List(x:String)" Name="NewTestFiles" />
                <Variable x:TypeArguments="x:Int32" Name="FICIndex" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" FileName="project.json" sap:VirtualizedContainerService.HintSize="597,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_7">
                <ui:ReadTextFile.Content>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_155">Raw</CSharpReference>
                  </OutArgument>
                </ui:ReadTextFile.Content>
              </ui:ReadTextFile>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="597,256" sap2010:WorkflowViewState.IdRef="MultipleAssign_44">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_84">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="njl:JObject">
                          <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_156">JObj</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="njl:JObject">
                          <CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_357">JObject.Parse(Raw)</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_85">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="njl:JArray">
                          <CSharpReference x:TypeArguments="njl:JArray" sap2010:WorkflowViewState.IdRef="CSharpReference`1_157">FileInfoCollection</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="njl:JArray">
                          <CSharpValue x:TypeArguments="njl:JArray" sap2010:WorkflowViewState.IdRef="CSharpValue`1_359">(JArray) JObj["designOptions"]["fileInfoCollection"]</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_88">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="njl:JArray">
                          <CSharpReference x:TypeArguments="njl:JArray" sap2010:WorkflowViewState.IdRef="CSharpReference`1_160">IgnoredFiles</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="njl:JArray">
                          <CSharpValue x:TypeArguments="njl:JArray" sap2010:WorkflowViewState.IdRef="CSharpValue`1_364">(JArray) JObj["designOptions"]["processOptions"]["ignoredFiles"]</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_87">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">
                          <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_159">FilesToIgnore</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">
                          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_380">Directory.GetFiles("Design", "*.xaml", SearchOption.AllDirectories).Select(f =&gt; Path.GetRelativePath(Directory.GetCurrentDirectory(), f).Replace("\\","/")).Where(f =&gt; IgnoredFiles.All(i =&gt; i.ToString() != f) ).ToList()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="AssignOperation_91">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">
                          <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_163">NewTestFiles</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">
                          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_395" xml:space="preserve">Directory.GetFiles(Directory.GetCurrentDirectory(), "*.xaml",SearchOption.AllDirectories)
.Select(f =&gt; Path.GetRelativePath(Directory.GetCurrentDirectory(), f))
.Where(f =&gt;
	!f.StartsWith("Design") &amp;&amp; 
	FileInfoCollection.All(c =&gt; c["fileName"].ToString() != f) &amp;&amp; 
	f.Split("\\", StringSplitOptions.RemoveEmptyEntries).Contains("Tests")	
).ToList()</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_93">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_165">FICIndex</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
              <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="597,872" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                <ui:InterruptibleWhile.Body>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="561,706" sap2010:WorkflowViewState.IdRef="Sequence_65">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If DisplayName="Within Design Folder?" sap:VirtualizedContainerService.HintSize="499,595" sap2010:WorkflowViewState.IdRef="If_14">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_387">FileInfoCollection[FICIndex]["fileName"].ToString().Contains("Design")</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="300,224" sap2010:WorkflowViewState.IdRef="Sequence_63">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="258,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Remove">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="njl:JArray">
                                <CSharpValue x:TypeArguments="njl:JArray" sap2010:WorkflowViewState.IdRef="CSharpValue`1_389">FileInfoCollection</CSharpValue>
                              </InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="njl:JToken">
                              <CSharpValue x:TypeArguments="njl:JToken" sap2010:WorkflowViewState.IdRef="CSharpValue`1_390">FileInfoCollection[FICIndex]</CSharpValue>
                            </InArgument>
                          </InvokeMethod>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="465,189" sap2010:WorkflowViewState.IdRef="Sequence_64">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_48">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_94">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_166">FICIndex</CSharpReference>
                                    </OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Int32">
                                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_391">FICIndex + 1</CSharpValue>
                                    </InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ui:InterruptibleWhile.Body>
                <ui:InterruptibleWhile.Condition>
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_388">FICIndex &lt; FileInfoCollection.Count</CSharpValue>
                </ui:InterruptibleWhile.Condition>
              </ui:InterruptibleWhile>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Ignore Existing Tests" sap:VirtualizedContainerService.HintSize="597,551" sap2010:WorkflowViewState.IdRef="ForEach`1_22">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="NewTestFile" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="465,365" sap2010:WorkflowViewState.IdRef="Sequence_62">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="njl:JObject" Name="TestFileJObj" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_47">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_92">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="njl:JObject">
                                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_164">TestFileJObj</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="njl:JObject">
                                  <CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_384" xml:space="preserve">JObject.Parse(JsonConvert.SerializeObject(new Dictionary&lt;string, string&gt;(){
	    {"editingStatus", "Publishable"},
        {"testCaseId", Guid.NewGuid().ToString()},
        {"testCaseType", "TestCase"},
        {"fileName", NewTestFile}
}))</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="423,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="njl:JArray">
                            <CSharpValue x:TypeArguments="njl:JArray" sap2010:WorkflowViewState.IdRef="CSharpValue`1_375">FileInfoCollection</CSharpValue>
                          </InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="njl:JObject">
                          <CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_378">TestFileJObj</CSharpValue>
                        </InArgument>
                      </InvokeMethod>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <ui:ForEach.Values>
                  <InArgument x:TypeArguments="sc:IEnumerable">
                    <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_374">NewTestFiles</CSharpValue>
                  </InArgument>
                </ui:ForEach.Values>
              </ui:ForEach>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Ignore Workflows" sap:VirtualizedContainerService.HintSize="597,410" sap2010:WorkflowViewState.IdRef="ForEach`1_21">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="IgnoredFile" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="300,224" sap2010:WorkflowViewState.IdRef="Sequence_60">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="258,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="njl:JArray">
                            <CSharpValue x:TypeArguments="njl:JArray" sap2010:WorkflowViewState.IdRef="CSharpValue`1_372">IgnoredFiles</CSharpValue>
                          </InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_367">IgnoredFile</CSharpValue>
                        </InArgument>
                      </InvokeMethod>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <ui:ForEach.Values>
                  <InArgument x:TypeArguments="sc:IEnumerable">
                    <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_366">FilesToIgnore</CSharpValue>
                  </InArgument>
                </ui:ForEach.Values>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="597,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_46">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_89">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="njl:JToken">
                          <CSharpReference x:TypeArguments="njl:JToken" sap2010:WorkflowViewState.IdRef="CSharpReference`1_161">JObj["designOptions"]["fileInfoCollection"]</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="njl:JToken">
                          <CSharpValue x:TypeArguments="njl:JToken" sap2010:WorkflowViewState.IdRef="CSharpValue`1_369">FileInfoCollection</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_90">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="njl:JToken">
                          <CSharpReference x:TypeArguments="njl:JToken" sap2010:WorkflowViewState.IdRef="CSharpReference`1_162">JObj["designOptions"]["processOptions"]["ignoredFiles"]</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="njl:JToken">
                          <CSharpValue x:TypeArguments="njl:JToken" sap2010:WorkflowViewState.IdRef="CSharpValue`1_370">IgnoredFiles</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
              <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="project.json" sap:VirtualizedContainerService.HintSize="597,133" sap2010:WorkflowViewState.IdRef="WriteTextFile_6">
                <ui:WriteTextFile.Text>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_371">JsonConvert.SerializeObject(JObj)</CSharpValue>
                  </InArgument>
                </ui:WriteTextFile.Text>
              </ui:WriteTextFile>
            </Sequence>
            <ui:CommentOut sap2010:Annotation.AnnotationText="Causes Studio to Boom For Now" DisplayName="Disabled: Add GlobalConstants for Config Paths" sap:VirtualizedContainerService.HintSize="659,83" sap2010:WorkflowViewState.IdRef="CommentOut_1">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="485,711" sap2010:WorkflowViewState.IdRef="Sequence_28">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="RawGlobalVariables" />
                    <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="ListOfGlobalVariables" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadTextFile File="{x:Null}" DisplayName="Read Global Vars File" FileName=".project\\globalVariables.json" sap:VirtualizedContainerService.HintSize="423,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_3">
                    <ui:ReadTextFile.Content>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">RawGlobalVariables</CSharpReference>
                      </OutArgument>
                    </ui:ReadTextFile.Content>
                  </ui:ReadTextFile>
                  <ui:MultipleAssign DisplayName="Parse Global Vars" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_19">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">
                              <CSharpReference x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">ListOfGlobalVariables</CSharpReference>
                            </OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">
                              <CSharpValue x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">JsonConvert.DeserializeObject&lt;List&lt;Dictionary&lt;string, string&gt;&gt;&gt;(RawGlobalVariables)</CSharpValue>
                            </InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" DisplayName="Add Module ConfigPath Global Vars" sap:VirtualizedContainerService.HintSize="423,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1">
                    <AddToCollection.Item>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                        <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172" xml:space="preserve">new Dictionary&lt;string, string&gt;()
{
	{ "Constant", "false"},
    {"Name", "ConfigPath_" + Name},
    {"TypeFullyQualifiedName", "System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"},
	{"UnresolvedTypeFullyQualifiedName", ""},
	{"Expression",Path.Combine(Root, "Data", Path.Combine(Root, "Data", Name + "Config.xlsx"))},
	{"IsLiteral", "false"}
}</CSharpValue>
                      </InArgument>
                    </AddToCollection.Item>
                    <InArgument x:TypeArguments="scg:ICollection(scg:Dictionary(x:String, x:String))">
                      <CSharpValue x:TypeArguments="scg:ICollection(scg:Dictionary(x:String, x:String))" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">ListOfGlobalVariables</CSharpValue>
                    </InArgument>
                  </AddToCollection>
                  <ui:MultipleAssign DisplayName="Serialize Global Vars" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_20">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">RawGlobalVariables</CSharpReference>
                            </OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">JsonConvert.SerializeObject(ListOfGlobalVariables)</CSharpValue>
                            </InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:WriteTextFile File="{x:Null}" DisplayName="Write Global Vars File" FileName=".project\\globalVariables.json" sap:VirtualizedContainerService.HintSize="423,133" sap2010:WorkflowViewState.IdRef="WriteTextFile_3">
                    <ui:WriteTextFile.Text>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">RawGlobalVariables</CSharpValue>
                      </InArgument>
                    </ui:WriteTextFile.Text>
                  </ui:WriteTextFile>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <ui:LogMessage DisplayName="LM: Module Complete" sap:VirtualizedContainerService.HintSize="659,141" sap2010:WorkflowViewState.IdRef="LogMessage_6">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">"Completed module"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <ui:ForEachRow.DataTable>
        <InArgument x:TypeArguments="sd:DataTable">
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">dt_Modules</CSharpValue>
        </InArgument>
      </ui:ForEachRow.DataTable>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
  </Sequence>
</Activity>