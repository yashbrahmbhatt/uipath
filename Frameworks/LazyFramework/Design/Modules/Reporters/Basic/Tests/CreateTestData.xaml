<Activity mc:Ignorable="sap sap2010" x:Class="CreateTestData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Path to the config file to load." Name="in_ConfigPath" Type="InArgument(x:String)" />
  </x:Members>
  <this:CreateTestData.in_ConfigPath>
    <InArgument x:TypeArguments="x:String">
      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">GlobalConstants.ConfigPath_BasicReporterTemplate</CSharpValue>
    </InArgument>
  </this:CreateTestData.in_ConfigPath>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>985,2403</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Threading</AssemblyReference>
      <AssemblyReference>System.Threading.AccessControl</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Helper to create test data in a queue to test the reporter." DisplayName="CreateTestData" sap:VirtualizedContainerService.HintSize="540,2338" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="Config" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="LM: Start" sap:VirtualizedContainerService.HintSize="478,141" sap2010:WorkflowViewState.IdRef="LogMessage_1">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">
            <CSharpValue.Result>
              <OutArgument x:TypeArguments="x:Object" />
            </CSharpValue.Result>string.Format("Creating reporter test data using Config file at '{0}'", in_ConfigPath)</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Utility\\LoadConfig.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Shared\\LoadConfig.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">
            <CSharpValue.Result>
              <OutArgument x:TypeArguments="x:String" />
            </CSharpValue.Result>in_ConfigPath</CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_IgnoreSheets">
          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">
            <CSharpValue.Result>
              <OutArgument x:TypeArguments="s:String[]" />
            </CSharpValue.Result>new string[]{}</CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">
          <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">
            <CSharpReference.Result>
              <OutArgument x:TypeArguments="Location(scg:Dictionary(x:String, x:String))" />
            </CSharpReference.Result>Config</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_TextFiles" />
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataSet)" x:Key="out_ExcelFiles" />
        <OutArgument x:TypeArguments="sd:DataSet" x:Key="out_DataSet" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="Loop through counts" sap:VirtualizedContainerService.HintSize="478,1681" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Int32">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="i" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Add Item to Queue" sap:VirtualizedContainerService.HintSize="444,1495" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:QueueItem" Name="Transaction" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:AddTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Start Transaction" sap:VirtualizedContainerService.HintSize="402,194" sap2010:WorkflowViewState.IdRef="AddTransactionItem_1">
              <ui:AddTransactionItem.FolderPath>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>Config["QueueFolder"]</CSharpValue>
                </InArgument>
              </ui:AddTransactionItem.FolderPath>
              <ui:AddTransactionItem.QueueType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>Config["QueueName"]</CSharpValue>
                </InArgument>
              </ui:AddTransactionItem.QueueType>
              <ui:AddTransactionItem.Reference>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>i.ToString()</CSharpValue>
                </InArgument>
              </ui:AddTransactionItem.Reference>
              <ui:AddTransactionItem.TransactionInformation>
                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
              </ui:AddTransactionItem.TransactionInformation>
              <ui:AddTransactionItem.TransactionItem>
                <OutArgument x:TypeArguments="ui:QueueItem">
                  <CSharpReference x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(ui:QueueItem)" />
                    </CSharpReference.Result>Transaction</CSharpReference>
                </OutArgument>
              </ui:AddTransactionItem.TransactionItem>
            </ui:AddTransactionItem>
            <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Used invoke to bypass code analyzer rule." Code="System.Threading.Thread.Sleep(1000*Convert.ToInt32(new Random().NextInt64(0, 11)));" DisplayName="Adding Delay for Execution Time" sap:VirtualizedContainerService.HintSize="402,196" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
              <ui:InvokeCode.Arguments>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:InvokeCode.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeCode>
            <If DisplayName="Lucky?" sap:VirtualizedContainerService.HintSize="402,937" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:Boolean" />
                    </CSharpValue.Result>new Random().NextInt64(0, 2) == 1</CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Successful" ErrorType="Business" sap:VirtualizedContainerService.HintSize="334,191" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Successful">
                  <ui:SetTransactionStatus.Analytics>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                  </ui:SetTransactionStatus.Analytics>
                  <ui:SetTransactionStatus.FolderPath>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:String" />
                        </CSharpValue.Result>Config["QueueFolder"]</CSharpValue>
                    </InArgument>
                  </ui:SetTransactionStatus.FolderPath>
                  <ui:SetTransactionStatus.Output>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                  </ui:SetTransactionStatus.Output>
                  <ui:SetTransactionStatus.TransactionItem>
                    <InArgument x:TypeArguments="ui:QueueItem">
                      <CSharpValue x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="ui:QueueItem" />
                        </CSharpValue.Result>Transaction</CSharpValue>
                    </InArgument>
                  </ui:SetTransactionStatus.TransactionItem>
                </ui:SetTransactionStatus>
              </If.Then>
              <If.Else>
                <If DisplayName="App or Bus?" sap:VirtualizedContainerService.HintSize="368,564" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:Boolean" />
                        </CSharpValue.Result>new Random().NextInt64(0, 2) == 1</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Business" ErrorType="Business" sap:VirtualizedContainerService.HintSize="334,191" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_3" Reason="Testing Business Exceptions" Status="Failed">
                      <ui:SetTransactionStatus.Analytics>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Analytics>
                      <ui:SetTransactionStatus.FolderPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>Config["QueueFolder"]</CSharpValue>
                        </InArgument>
                      </ui:SetTransactionStatus.FolderPath>
                      <ui:SetTransactionStatus.Output>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Output>
                      <ui:SetTransactionStatus.TransactionItem>
                        <InArgument x:TypeArguments="ui:QueueItem">
                          <CSharpValue x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="ui:QueueItem" />
                            </CSharpValue.Result>Transaction</CSharpValue>
                        </InArgument>
                      </ui:SetTransactionStatus.TransactionItem>
                    </ui:SetTransactionStatus>
                  </If.Then>
                  <If.Else>
                    <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Application" ErrorType="Application" sap:VirtualizedContainerService.HintSize="334,191" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_5" Reason="Testing System Exceptions" Status="Failed">
                      <ui:SetTransactionStatus.Analytics>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Analytics>
                      <ui:SetTransactionStatus.FolderPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>Config["QueueFolder"]</CSharpValue>
                        </InArgument>
                      </ui:SetTransactionStatus.FolderPath>
                      <ui:SetTransactionStatus.Output>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Output>
                      <ui:SetTransactionStatus.TransactionItem>
                        <InArgument x:TypeArguments="ui:QueueItem">
                          <CSharpValue x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="ui:QueueItem" />
                            </CSharpValue.Result>Transaction</CSharpValue>
                        </InArgument>
                      </ui:SetTransactionStatus.TransactionItem>
                    </ui:SetTransactionStatus>
                  </If.Else>
                </If>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">
            <CSharpValue.Result>
              <OutArgument x:TypeArguments="sc:IEnumerable" />
            </CSharpValue.Result>new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
    </ui:ForEach>
    <ui:LogMessage DisplayName="LM: Complete" sap:VirtualizedContainerService.HintSize="478,141" sap2010:WorkflowViewState.IdRef="LogMessage_2">
      <ui:LogMessage.Level>
        <InArgument x:TypeArguments="ui:LogLevel">
          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">
            <CSharpValue.Result>
              <OutArgument x:TypeArguments="ui:LogLevel" />
            </CSharpValue.Result>UiPath.Core.Activities.LogLevel.Info</CSharpValue>
        </InArgument>
      </ui:LogMessage.Level>
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">
            <CSharpValue.Result>
              <OutArgument x:TypeArguments="x:Object" />
            </CSharpValue.Result>"Finished adding test data"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>