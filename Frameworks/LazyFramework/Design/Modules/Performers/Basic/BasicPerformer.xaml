<Activity mc:Ignorable="sap sap2010" x:Class="Performer" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="The path to the config file to use to load variables and resources." Name="in_ConfigPath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="A list of sheet names to ignore when loading the config file." Name="in_IgnoreSheets" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Used to modify the workflow in order to test different scenarios. Only used to test exception handling in this workflow. Leave as null for production use." Name="in_TestID" Type="InArgument(x:String)" />
  </x:Members>
  <this:Performer.in_ConfigPath>
    <InArgument x:TypeArguments="x:String">
      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_229">GlobalConstants.ConfigPath_BasicPerformerTemplate</CSharpValue>
    </InArgument>
  </this:Performer.in_ConfigPath>
  <this:Performer.in_IgnoreSheets>
    <InArgument x:TypeArguments="s:String[]">
      <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">new string[]{}</CSharpValue>
    </InArgument>
  </this:Performer.in_IgnoreSheets>
  <this:Performer.in_TestID>
    <InArgument x:TypeArguments="x:String">
      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195">null</CSharpValue>
    </InArgument>
  </this:Performer.in_TestID>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>986,1450</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="[Author]&#xA;&#xA;[Description of work done for each transaction]" DisplayName="Performer" sap:VirtualizedContainerService.HintSize="930,1385" sap2010:WorkflowViewState.IdRef="Sequence_27">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="Config">
        <Variable.Default>
          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">null</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="TextFiles" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, sd:DataSet)" Name="ExcelFiles" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Initialize Settings. This is outside of the state machine because if this fails, we're probably going to fail when sending the email anyways. Let's just fail faster :)" DisplayName="Initialize Settings" sap:VirtualizedContainerService.HintSize="868,462" sap2010:WorkflowViewState.IdRef="Sequence_28">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="LM: Screen" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_214">"The primary screen resolution is: " + SystemParameters.PrimaryScreenWidth.ToString() + " x " + SystemParameters.PrimaryScreenHeight.ToString()</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Utility\\LoadConfig.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Shared\\LoadConfig.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_215">in_ConfigPath</CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="s:String[]" x:Key="in_IgnoreSheets">
            <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_216">in_IgnoreSheets</CSharpValue>
          </InArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">
            <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">Config</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_TextFiles">
            <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">TextFiles</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataSet)" x:Key="out_ExcelFiles">
            <CSharpReference x:TypeArguments="scg:Dictionary(x:String, sd:DataSet)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">ExcelFiles</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataSet" x:Key="out_DataSet" />
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <StateMachine InitialState="{x:Reference __ReferenceID2}" sap2010:Annotation.AnnotationText="The core framework where applications are initialized and transactions are processed from the queue. Will send emails on all exceptions and reinitialize between transactions during system exceptions." DisplayName="Transactional State Machine" sap:VirtualizedContainerService.HintSize="868,715" sap2010:WorkflowViewState.IdRef="StateMachine_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
          <x:Double x:Key="StateContainerWidth">834</x:Double>
          <x:Double x:Key="StateContainerHeight">636.5</x:Double>
          <av:PointCollection x:Key="ConnectorLocation">330,40 360,40 360,40.2 430,40.2</av:PointCollection>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Reset starting state of the automation. Usually used to close/kill all applications and then reinitialize to start and also to recover from system exceptions." DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="703,2579" sap2010:WorkflowViewState.IdRef="State_9">
        <State.Entry>
          <TryCatch DisplayName="Try Initializing" sap:VirtualizedContainerService.HintSize="657,2095" sap2010:WorkflowViewState.IdRef="TryCatch_8">
            <TryCatch.Try>
              <ui:RetryScope DisplayName="Retry - Initializing" sap:VirtualizedContainerService.HintSize="618,1866" sap2010:WorkflowViewState.IdRef="RetryScope_4">
                <ui:RetryScope.ActivityBody>
                  <ActivityAction>
                    <Sequence DisplayName="Initialize" sap:VirtualizedContainerService.HintSize="576,1691" sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Switch x:TypeArguments="x:String" DisplayName="@Test Variations - Initialization" sap:VirtualizedContainerService.HintSize="514,160" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                        <Switch.Expression>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200">in_TestID</CSharpValue>
                          </InArgument>
                        </Switch.Expression>
                        <ui:MultipleAssign x:Key="FrameworkMaintenanceTime" DisplayName="Update Maintenance Times" sap:VirtualizedContainerService.HintSize="423,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_21">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">Config["Maintenance_Start"]</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">00:00:00</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">Config["Maintenance_End"]</CSharpReference>
                                  </OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">23:59:59</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <Throw x:Key="FrameworkInitializationError" DisplayName="Throw InitializationError" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1">
                          <InArgument x:TypeArguments="s:Exception">
                            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201">new Exception(in_TestID)</CSharpValue>
                          </InArgument>
                        </Throw>
                      </Switch>
                      <ui:LogMessage DisplayName="LM: Initializing" sap:VirtualizedContainerService.HintSize="514,141" sap2010:WorkflowViewState.IdRef="LogMessage_12">
                        <ui:LogMessage.Level>
                          <InArgument x:TypeArguments="ui:LogLevel">
                            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Level>
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">SystemException == null ? "Initializing applications" : "Reinitializing applications"</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <ui:MultipleAssign DisplayName="Reset System Exception" sap:VirtualizedContainerService.HintSize="514,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="s:Exception">
                                  <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">SystemException</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="s:Exception">
                                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">null</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Is Maintenance Time? (Initialize)" sap:VirtualizedContainerService.HintSize="514,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Shared\\IsMaintenanceTime.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_Start">
                            <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_218">new TimeSpan(Convert.ToInt32(Config["Maintenance_Start"].Split(":",StringSplitOptions.RemoveEmptyEntries)[0]), Convert.ToInt32(Config["Maintenance_Start"].Split(":",StringSplitOptions.RemoveEmptyEntries)[1]), Convert.ToInt32(Config["Maintenance_Start"].Split(":",StringSplitOptions.RemoveEmptyEntries)[2]))</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_End">
                            <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_217">new TimeSpan(Convert.ToInt32(Config["Maintenance_End"].Split(":",StringSplitOptions.RemoveEmptyEntries)[0]), Convert.ToInt32(Config["Maintenance_End"].Split(":",StringSplitOptions.RemoveEmptyEntries)[1]), Convert.ToInt32(Config["Maintenance_End"].Split(":",StringSplitOptions.RemoveEmptyEntries)[2]))</CSharpValue>
                          </InArgument>
                          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsMaintenanceTime">
                            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">IsMaintenanceTime</CSharpReference>
                          </OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If DisplayName="Not Maintenance?" sap:VirtualizedContainerService.HintSize="514,905" sap2010:WorkflowViewState.IdRef="If_8">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_230">!IsMaintenanceTime</CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="Not Maintenance Time" sap:VirtualizedContainerService.HintSize="480,582" sap2010:WorkflowViewState.IdRef="Sequence_29">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch DisplayName="Try Close, Catch Kill (Initialization)" sap:VirtualizedContainerService.HintSize="438,341" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Close Applications (Initialization)" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Design\\Modules\\Performers\\Basic\\Framework\\CloseApplications.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Kill Processes (Initialization)" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Design\\Modules\\Performers\\Basic\\Framework\\KillProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="s:String[]" x:Key="in_ProcessesToKill">
                                          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_198">Config["ProcessesToKill"] == null ? new string[]{} : Config["ProcessesToKill"].Split(",", StringSplitOptions.RemoveEmptyEntries)</CSharpValue>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Init All Applications" sap:VirtualizedContainerService.HintSize="438,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Design\\Modules\\Performers\\Basic\\Framework\\InitializeApplications.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <ui:LogMessage DisplayName="LM: Maintenance (Initialization)" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_23">
                            <ui:LogMessage.Level>
                              <InArgument x:TypeArguments="ui:LogLevel">
                                <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_224">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Level>
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_225">string.Format("Current time of {0} is within the maintenance period of {1} - {2}", new string[]{DateTime.Now.TimeOfDay.ToString(), Config["Maintenance_Start"], Config["Maintenance_End"]})</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:RetryScope.ActivityBody>
                <ui:RetryScope.Condition>
                  <ActivityFunc x:TypeArguments="x:Boolean" />
                </ui:RetryScope.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:RetryScope>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="623.3333333333334,22" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:MultipleAssign DisplayName="Set Framework Exception (Initialization)" sap:VirtualizedContainerService.HintSize="422.6666666666667,100.66666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="s:Exception">
                              <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">FrameworkException</CSharpReference>
                            </OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="s:Exception">
                              <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">exception</CSharpValue>
                            </InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">430,0</av:Point>
            <av:Size x:Key="ShapeSize">254,134</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <State.Transitions>
          <Transition DisplayName="Success" sap:VirtualizedContainerService.HintSize="450,507" sap2010:WorkflowViewState.IdRef="Transition_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">557,134 557,164 556.5,164 556.5,224</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.Condition>
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">FrameworkException == null &amp;&amp; ConsecutiveSysEx &lt; Convert.ToInt32(Config["MaxConsecutiveExceptions"])</CSharpValue>
            </Transition.Condition>
            <Transition.To>
              <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Checks whether a stop signal was requested or the process is within maintenance hours. If not, will get the next available transaction." DisplayName="Get Transaction Data" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="State_8">
                <State.Entry>
                  <TryCatch DisplayName="Try Getting Transaction" sap:VirtualizedContainerService.HintSize="597,1953" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                    <TryCatch.Try>
                      <Sequence DisplayName="Get Transaction" sap:VirtualizedContainerService.HintSize="559,1725" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="LM: Get Next Transaction" sap:VirtualizedContainerService.HintSize="497,141" sap2010:WorkflowViewState.IdRef="LogMessage_13">
                          <ui:LogMessage.Level>
                            <InArgument x:TypeArguments="ui:LogLevel">
                              <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Level>
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">"Getting next transaction"</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <Switch x:TypeArguments="x:String" DisplayName="@Test Variations - Get Transaction Data" sap:VirtualizedContainerService.HintSize="497,140" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                          <Switch.Expression>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">in_TestID</CSharpValue>
                            </InArgument>
                          </Switch.Expression>
                          <Throw x:Key="FrameworkGetTransactionDataError" DisplayName="Throw GetTransactionData Error" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_4">
                            <InArgument x:TypeArguments="s:Exception">
                              <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_209">new Exception(in_TestID)</CSharpValue>
                            </InArgument>
                          </Throw>
                        </Switch>
                        <ui:ShouldStop DisplayName="Stop Requested?" sap:VirtualizedContainerService.HintSize="497,90" sap2010:WorkflowViewState.IdRef="ShouldStop_2">
                          <ui:ShouldStop.Result>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">StopRequested</CSharpReference>
                            </OutArgument>
                          </ui:ShouldStop.Result>
                        </ui:ShouldStop>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Is Maintenance Time? (GetTransactionData)" sap:VirtualizedContainerService.HintSize="497,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Shared\\IsMaintenanceTime.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_Start">
                              <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">new TimeSpan(Convert.ToInt32(Config["Maintenance_Start"].Split(":",StringSplitOptions.RemoveEmptyEntries)[0]), Convert.ToInt32(Config["Maintenance_Start"].Split(":",StringSplitOptions.RemoveEmptyEntries)[1]), Convert.ToInt32(Config["Maintenance_Start"].Split(":",StringSplitOptions.RemoveEmptyEntries)[2]))</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_End">
                              <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">new TimeSpan(Convert.ToInt32(Config["Maintenance_End"].Split(":",StringSplitOptions.RemoveEmptyEntries)[0]), Convert.ToInt32(Config["Maintenance_End"].Split(":",StringSplitOptions.RemoveEmptyEntries)[1]), Convert.ToInt32(Config["Maintenance_End"].Split(":",StringSplitOptions.RemoveEmptyEntries)[2]))</CSharpValue>
                            </InArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsMaintenanceTime">
                              <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">IsMaintenanceTime</CSharpReference>
                            </OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:IfElseIf DisplayName="Stop Requested/Maintenance Window/Success?" sap:VirtualizedContainerService.HintSize="496.6666666666667,970" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
                          <ui:IfElseIf.ConditionBlocks>
                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                              <ui:IfElseIfBlock BlockType="If">
                                <ui:IfElseIfBlock.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">StopRequested</CSharpValue>
                                  </InArgument>
                                </ui:IfElseIfBlock.Condition>
                                <ui:IfElseIfBlock.Then>
                                  <ui:LogMessage DisplayName="LM: Stop" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_14">
                                    <ui:LogMessage.Level>
                                      <InArgument x:TypeArguments="ui:LogLevel">
                                        <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Level>
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">"Stop requested"</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                  </ui:LogMessage>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                              <ui:IfElseIfBlock BlockType="ElseIf">
                                <ui:IfElseIfBlock.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">IsMaintenanceTime</CSharpValue>
                                  </InArgument>
                                </ui:IfElseIfBlock.Condition>
                                <ui:IfElseIfBlock.Then>
                                  <ui:LogMessage DisplayName="LM: Maintenance" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_15">
                                    <ui:LogMessage.Level>
                                      <InArgument x:TypeArguments="ui:LogLevel">
                                        <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Level>
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">string.Format("Current time of {0} is within the maintenance period of {1} - {2}", new string[]{DateTime.Now.TimeOfDay.ToString(), Config["Maintenance_Start"], Config["Maintenance_End"]})</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                  </ui:LogMessage>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                              <ui:IfElseIfBlock BlockType="Else">
                                <ui:IfElseIfBlock.Then>
                                  <ui:RetryScope DisplayName="Retry - Get Transaction" sap:VirtualizedContainerService.HintSize="376,313.3333333333333" sap2010:WorkflowViewState.IdRef="RetryScope_5">
                                    <ui:RetryScope.ActivityBody>
                                      <ActivityAction>
                                        <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Next Transaction" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="GetQueueItem_3">
                                          <ui:GetQueueItem.FolderPath>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">Config["QueueFolder"]</CSharpValue>
                                            </InArgument>
                                          </ui:GetQueueItem.FolderPath>
                                          <ui:GetQueueItem.QueueType>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">Config["QueueName"]</CSharpValue>
                                            </InArgument>
                                          </ui:GetQueueItem.QueueType>
                                          <ui:GetQueueItem.TransactionItem>
                                            <OutArgument x:TypeArguments="ui:QueueItem">
                                              <CSharpReference x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">TransactionItem</CSharpReference>
                                            </OutArgument>
                                          </ui:GetQueueItem.TransactionItem>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:GetQueueItem>
                                      </ActivityAction>
                                    </ui:RetryScope.ActivityBody>
                                    <ui:RetryScope.Condition>
                                      <ActivityFunc x:TypeArguments="x:Boolean" />
                                    </ui:RetryScope.Condition>
                                  </ui:RetryScope>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                            </sc:BindingList>
                          </ui:IfElseIf.ConditionBlocks>
                        </ui:IfElseIf>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="517,21" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:MultipleAssign DisplayName="Set Framework Exception (Get Transaction Data)" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_14">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="s:Exception">
                                      <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">FrameworkException</CSharpReference>
                                    </OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="s:Exception">
                                      <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">exception</CSharpValue>
                                    </InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </State.Entry>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">438,224</av:Point>
                    <av:Size x:Key="ShapeSize">238,134</av:Size>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Double x:Key="StateContainerWidth">203.5</x:Double>
                    <x:Double x:Key="StateContainerHeight">25</x:Double>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <State.Transitions>
                  <Transition DisplayName="Error - Get Transaction Data" sap2010:WorkflowViewState.IdRef="Transition_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">438,291 408,291 408,290 276,290</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">37</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">36</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.Condition>
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">FrameworkException != null</CSharpValue>
                    </Transition.Condition>
                    <Transition.To>
                      <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Closes all used resources and ends the process." DisplayName="End" sap:VirtualizedContainerService.HintSize="212,104" sap2010:WorkflowViewState.IdRef="State_7" IsFinal="True">
                        <State.Entry>
                          <Sequence DisplayName="End Process" sap:VirtualizedContainerService.HintSize="500,1037" sap2010:WorkflowViewState.IdRef="Sequence_23">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="LM: Start End" sap:VirtualizedContainerService.HintSize="438,141" sap2010:WorkflowViewState.IdRef="LogMessage_16">
                              <ui:LogMessage.Level>
                                <InArgument x:TypeArguments="ui:LogLevel">
                                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Level>
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">"Ending process"</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                            </ui:LogMessage>
                            <If DisplayName="Framework Exception?" sap:VirtualizedContainerService.HintSize="438,52" sap2010:WorkflowViewState.IdRef="If_6">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">FrameworkException != null</CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Handle Frameowrk Error" sap:VirtualizedContainerService.HintSize="465,829" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="ScreenshotPath" />
                                    <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="TemplateData" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="LM: Framework Exception" sap:VirtualizedContainerService.HintSize="423,141" sap2010:WorkflowViewState.IdRef="LogMessage_17">
                                    <ui:LogMessage.Level>
                                      <InArgument x:TypeArguments="ui:LogLevel">
                                        <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Level>
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">"Encountered framework exception. Sending out email"</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                  </ui:LogMessage>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Take Screenshot" sap:VirtualizedContainerService.HintSize="423,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Shared\\TakeScreenshot.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">Config["Folder_ExScreenshots"]</CSharpValue>
                                      </InArgument>
                                      <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">ScreenshotPath</CSharpReference>
                                      </InOutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Generate Diagnostic" sap:VirtualizedContainerService.HintSize="423,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Shared\\GenerateDiagnosticDictionary.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">
                                        <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_160">FrameworkException</CSharpValue>
                                      </InArgument>
                                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_TemplateData">
                                        <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">TemplateData</CSharpReference>
                                      </OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:MultipleAssign DisplayName="Set Variables" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_15">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Object">
                                              <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">TemplateData["ProcessName"]</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">Config["ProcessName"]</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="423,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Shared\\SendEmail.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_To">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">Config["FrameEx_To"]</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Subject">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">TextFiles["FrameEx_Subject"]</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Body">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">TextFiles["FrameEx_Body"]</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_Attachments">
                                        <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">new string[]{ScreenshotPath}</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_Port">
                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">Convert.ToInt32(Config["SMTP_Port"])</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Server">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">Config["SMTP_Server"]</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_CredentialFolder">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">Config["CredentialFolder_Email"]</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_CredentialName">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">Config["CredentialName_Email"]</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_CC">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">Config["FrameEx_CC"]</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_TemplateData">
                                        <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">TemplateData</CSharpValue>
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                            <TryCatch DisplayName="Try Close, Catch Kill (End)" sap:VirtualizedContainerService.HintSize="438,341" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                              <TryCatch.Try>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Close Applications (End)" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Design\\Modules\\Performers\\Basic\\Framework\\CloseApplications.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Kill Processes (End)" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Design\\Modules\\Performers\\Basic\\Framework\\KillProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="s:String[]" x:Key="in_ProcessesToKill">
                                          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_199">Config["ProcessesToKill"] == null ? new string[]{} : Config["ProcessesToKill"].Split(",", StringSplitOptions.RemoveEmptyEntries)</CSharpValue>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <If DisplayName="Rethrow?" sap:VirtualizedContainerService.HintSize="438,272" sap2010:WorkflowViewState.IdRef="If_7">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">FrameworkException != null</CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Throw DisplayName="Rethrow FrameworkException" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2">
                                  <InArgument x:TypeArguments="s:Exception">
                                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_203">FrameworkException</CSharpValue>
                                  </InArgument>
                                </Throw>
                              </If.Then>
                            </If>
                          </Sequence>
                        </State.Entry>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">64,238.00000000000003</av:Point>
                            <av:Size x:Key="ShapeSize">212,104</av:Size>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Double x:Key="StateContainerWidth">178</x:Double>
                            <x:Double x:Key="StateContainerHeight">25</x:Double>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </State>
                    </Transition.To>
                  </Transition>
                  <Transition DisplayName="Data" sap2010:WorkflowViewState.IdRef="Transition_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">557,358 557,468</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.Condition>
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_220" xml:space="preserve">TransactionItem != null &amp;&amp; FrameworkException == null  &amp;&amp; !StopRequested &amp;&amp; !IsMaintenanceTime</CSharpValue>
                    </Transition.Condition>
                    <Transition.To>
                      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Processes the current transaction and performs all steps required. Handles Business and System exceptions and updates the queue status." DisplayName="Process" sap:VirtualizedContainerService.HintSize="246,141.33333333333334" sap2010:WorkflowViewState.IdRef="State_6">
                        <State.Entry>
                          <TryCatch DisplayName="Try Processing Transaction" sap:VirtualizedContainerService.HintSize="635,1058" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                            <TryCatch.Try>
                              <Sequence DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="559,743" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MultipleAssign DisplayName="Initialize State Variables" sap:VirtualizedContainerService.HintSize="497,163" sap2010:WorkflowViewState.IdRef="MultipleAssign_16">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="ui:BusinessRuleException">
                                            <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">BusinessException</CSharpReference>
                                          </OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="ui:BusinessRuleException">
                                            <CSharpValue x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">null</CSharpValue>
                                          </InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                            <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">Data</CSharpReference>
                                          </OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                            <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">TransactionItem.SpecificContent</CSharpValue>
                                          </InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">Reference</CSharpReference>
                                          </OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">TransactionItem.Reference</CSharpValue>
                                          </InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                                <Switch x:TypeArguments="x:String" DisplayName="@Test Variations - Process" sap:VirtualizedContainerService.HintSize="497,276" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                                  <Switch.Expression>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_210">in_TestID</CSharpValue>
                                    </InArgument>
                                  </Switch.Expression>
                                  <Throw x:Key="FrameworkProcessError" DisplayName="Throw FrameworkProcess Error" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_5">
                                    <InArgument x:TypeArguments="s:Exception">
                                      <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211">new Exception(in_TestID)</CSharpValue>
                                    </InArgument>
                                  </Throw>
                                </Switch>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Perform Transaction" sap:VirtualizedContainerService.HintSize="497,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Design\\Modules\\Performers\\Basic\\Framework\\Process.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Data">
                                      <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">Data</CSharpReference>
                                    </InOutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Reference">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196">Reference</CSharpValue>
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="601,21" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:MultipleAssign DisplayName="Set BusinessException" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_17">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="ui:BusinessRuleException">
                                              <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">BusinessException</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="ui:BusinessRuleException">
                                              <CSharpValue x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">exception</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="601,21" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:MultipleAssign DisplayName="Set SystemException" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_18">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="s:Exception">
                                              <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">SystemException</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="s:Exception">
                                              <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">exception</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <TryCatch DisplayName="Try Setting Transaction Status" sap:VirtualizedContainerService.HintSize="597,808" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                                <TryCatch.Try>
                                  <Sequence sap:VirtualizedContainerService.HintSize="559,540" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HandleTransactionOutcome.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="497,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Design\\Modules\\Performers\\Basic\\Framework\\HandleTransactionOutcome.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">
                                          <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">SystemException</CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">
                                          <CSharpValue x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">BusinessException</CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                                          <CSharpValue x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">TransactionItem</CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Data">
                                          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">Data</CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                                          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">Config</CSharpValue>
                                        </InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_TextFiles">
                                          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">TextFiles</CSharpValue>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <Switch x:TypeArguments="x:String" DisplayName="@Test Variations - Process (Bubble)" sap:VirtualizedContainerService.HintSize="497,276" sap2010:WorkflowViewState.IdRef="Switch`1_4">
                                      <Switch.Expression>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_212">in_TestID</CSharpValue>
                                        </InArgument>
                                      </Switch.Expression>
                                      <Throw x:Key="FrameworkProcessError" DisplayName="Throw FrameworkProcess Error (Bubble)" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_7">
                                        <InArgument x:TypeArguments="s:Exception">
                                          <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_213">new Exception(in_TestID)</CSharpValue>
                                        </InArgument>
                                      </Throw>
                                    </Switch>
                                  </Sequence>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="563,21" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <ui:MultipleAssign DisplayName="Set FrameworkException (Process)" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_19">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="s:Exception">
                                                  <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">FrameworkException</CSharpReference>
                                                </OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="s:Exception">
                                                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">exception</CSharpValue>
                                                </InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </TryCatch.Finally>
                          </TryCatch>
                        </State.Entry>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">434,468</av:Point>
                            <av:Size x:Key="ShapeSize">246,141</av:Size>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Double x:Key="StateContainerWidth">212</x:Double>
                            <x:Double x:Key="StateContainerHeight">25</x:Double>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <State.Transitions>
                          <Transition DisplayName="Error - Framework" sap2010:WorkflowViewState.IdRef="Transition_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:PointCollection x:Key="ConnectorLocation">434,552.6 159.4,552.6 159.4,342</av:PointCollection>
                                <x:Int32 x:Key="SrcConnectionPointIndex">45</x:Int32>
                                <x:Int32 x:Key="DestConnectionPointIndex">35</x:Int32>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Transition.To>
                              <x:Reference>__ReferenceID0</x:Reference>
                            </Transition.To>
                            <Transition.Condition>
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_186">FrameworkException != null</CSharpValue>
                            </Transition.Condition>
                          </Transition>
                          <Transition DisplayName="Success/BRE" sap:VirtualizedContainerService.HintSize="526,507" sap2010:WorkflowViewState.IdRef="Transition_13">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:PointCollection x:Key="ConnectorLocation">618.5,468 618.5,438 616.5,438 616.5,358</av:PointCollection>
                                <x:Int32 x:Key="SrcConnectionPointIndex">58</x:Int32>
                                <x:Int32 x:Key="DestConnectionPointIndex">59</x:Int32>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Transition.To>
                              <x:Reference>__ReferenceID1</x:Reference>
                            </Transition.To>
                            <Transition.Action>
                              <ui:MultipleAssign DisplayName="Reset Consecutive Exceptions" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_20">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">ConsecutiveSysEx</CSharpReference>
                                        </OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                              </ui:MultipleAssign>
                            </Transition.Action>
                            <Transition.Condition>
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">SystemException == null &amp;&amp; FrameworkException == null</CSharpValue>
                            </Transition.Condition>
                          </Transition>
                          <Transition DisplayName="Error - Transaction" sap2010:WorkflowViewState.IdRef="Transition_14">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:PointCollection x:Key="ConnectorLocation">680,510.3 710,510.3 710,93.80000000000001 684,93.80000000000001</av:PointCollection>
                                <x:Int32 x:Key="SrcConnectionPointIndex">20</x:Int32>
                                <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Transition.To>
                              <x:Reference>__ReferenceID2</x:Reference>
                            </Transition.To>
                            <Transition.Condition>
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188">SystemException != null &amp;&amp; FrameworkException == null</CSharpValue>
                            </Transition.Condition>
                          </Transition>
                        </State.Transitions>
                        <State.Variables>
                          <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Data" />
                          <Variable x:TypeArguments="x:String" Name="Reference" />
                        </State.Variables>
                      </State>
                    </Transition.To>
                  </Transition>
                  <Transition DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_16">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">438,317.8 408,317.8 408,310.80000000000007 276,310.80000000000007</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">53</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.To>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </Transition.To>
                    <Transition.Condition>
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">TransactionItem == null &amp;&amp; FrameworkException == null &amp;&amp; !StopRequested</CSharpValue>
                    </Transition.Condition>
                  </Transition>
                  <Transition DisplayName="Stop" sap2010:WorkflowViewState.IdRef="Transition_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">438,270.9 408,270.9 408,269.20000000000005 276,269.20000000000005</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">25</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.To>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </Transition.To>
                    <Transition.Condition>
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">StopRequested &amp;&amp; FrameworkException == null</CSharpValue>
                    </Transition.Condition>
                  </Transition>
                  <Transition DisplayName="Maintenance Time (GetTransactionData)" sap2010:WorkflowViewState.IdRef="Transition_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">438,250.8 408,250.8 408,243.40000000000003 276,243.40000000000003</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">13</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">0</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.To>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </Transition.To>
                    <Transition.Condition>
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_221">IsMaintenanceTime</CSharpValue>
                    </Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
          </Transition>
          <Transition DisplayName="Error - Initialization" sap2010:WorkflowViewState.IdRef="Transition_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">430,93.80000000000001 170,93.80000000000001 170,238.00000000000003</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">53</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.To>
              <x:Reference>__ReferenceID0</x:Reference>
            </Transition.To>
            <Transition.Condition>
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">FrameworkException != null</CSharpValue>
            </Transition.Condition>
          </Transition>
          <Transition DisplayName="MaxConsecutive" sap:VirtualizedContainerService.HintSize="588,790" sap2010:WorkflowViewState.IdRef="Transition_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">430,113.9 201.8,113.9 201.8,238.00000000000003</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">65</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">50</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.To>
              <x:Reference>__ReferenceID0</x:Reference>
            </Transition.To>
            <Transition.Action>
              <Sequence DisplayName="Update + Log" sap:VirtualizedContainerService.HintSize="485,393" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Set FrameworkException to Max Consecutive" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_22">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="s:Exception">
                            <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">FrameworkException</CSharpReference>
                          </OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="s:Exception">
                            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">new Exception("Maximum consecutive transaction system exceptions reached")</CSharpValue>
                          </InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <ui:LogMessage DisplayName="LM: Max Consecutive" sap:VirtualizedContainerService.HintSize="423,141" sap2010:WorkflowViewState.IdRef="LogMessage_19">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206">string.Format("The maximum number of consecutive system exceptions of {0} has been reached", ConsecutiveSysEx)</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                </ui:LogMessage>
              </Sequence>
            </Transition.Action>
            <Transition.Condition>
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_192">ConsecutiveSysEx &gt;= Convert.ToInt32(Config["MaxConsecutiveExceptions"])</CSharpValue>
            </Transition.Condition>
          </Transition>
          <Transition DisplayName="Maintenance Time (Initialize)" sap2010:WorkflowViewState.IdRef="Transition_22">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">442.7,134 442.7,164 244.20000000000002,164 244.20000000000002,238.00000000000003</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">3</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">66</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.To>
              <x:Reference>__ReferenceID0</x:Reference>
            </Transition.To>
            <Transition.Condition>
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">IsMaintenanceTime</CSharpValue>
            </Transition.Condition>
          </Transition>
        </State.Transitions>
      </State>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
        <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessException" />
        <Variable x:TypeArguments="s:Exception" Name="SystemException" />
        <Variable x:TypeArguments="s:Exception" Name="FrameworkException" />
        <Variable x:TypeArguments="x:Int32" Name="ConsecutiveSysEx" />
        <Variable x:TypeArguments="x:Boolean" Name="StopRequested" />
        <Variable x:TypeArguments="x:Boolean" Name="IsMaintenanceTime" />
      </StateMachine.Variables>
    </StateMachine>
  </Sequence>
</Activity>